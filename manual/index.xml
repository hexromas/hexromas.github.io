<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Manual-rsses on </title>
    <link>https://hexromas.github.io/manual/index.xml</link>
    <description>Recent content in Manual-rsses on </description>
    <generator>Hugo -- gohugo.io</generator>
    <atom:link href="https://hexromas.github.io/manual/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/deeplearning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/deeplearning/</guid>
      <description>&lt;!DOCTYPE html PUBLIC &#34;-//W3C//DTD XHTML 1.0 Transitional//EN&#34; &#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&#34;&gt;
&lt;!-- saved from url=(0051)http://www.cis.uni-muenchen.de/~davidk/deep-munich/ --&gt;
&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34; lang=&#34;ngerman&#34; xml:lang=&#34;ngerman&#34; data-livestyle-extension=&#34;available&#34; class=&#34;gr__cis_uni-muenchen_de hb-loaded&#34;&gt;

&lt;head&gt;&lt;meta http-equiv=&#34;Content-Type&#34; content=&#34;text/html; charset=UTF-8&#34;&gt;
  &lt;meta http-equiv=&#34;Content-Style-Type&#34; content=&#34;text/css&#34;&gt;
  &lt;meta name=&#34;generator&#34; content=&#34;pandoc&#34;&gt;
  &lt;title&gt;Deep Bo&lt;/title&gt;

  
  

  &lt;style type=&#34;text/css&#34;&gt;code{white-space: pre;}&lt;/style&gt;
  &lt;link rel=&#34;stylesheet&#34; href=&#34;./bootstrap.min.css&#34; type=&#34;text/css&#34;&gt;
&lt;script&gt;var old = null;function asplay_top(c){var audio = document.createElement(&#34;audio&#34;);if(audio != null &amp;&amp; audio.canPlayType &amp;&amp; audio.canPlayType(&#34;audio/mpeg&#34;)){if(old){old.pause();}audio.src = c;old = audio;audio.play();}}&lt;/script&gt;&lt;style id=&#34;style-1-cropbar-clipper&#34;&gt;/* Copyright 2014 Evernote Corporation. All rights reserved. */
.en-markup-crop-options {
    top: 18px !important;
    left: 50% !important;
    margin-left: -100px !important;
    width: 200px !important;
    border: 2px rgba(255,255,255,.38) solid !important;
    border-radius: 4px !important;
}

.en-markup-crop-options div div:first-of-type {
    margin-left: 0px !important;
}
&lt;/style&gt;
&lt;/head&gt;

&lt;body data-gr-c-s-loaded=&#34;true&#34; huaban_collector_injected=&#34;true&#34; data-feedly-extension-follow-feed=&#34;1.0.3&#34; data-feedly-extension-exttag=&#34;3.0.1&#34; data-feedly-mini=&#34;yes&#34; class=&#34;vn-highlighter-context&#34;&gt;
&lt;div class=&#34;container&#34;&gt;
&lt;div id=&#34;header&#34;&gt;
&lt;h1 class=&#34;title&#34;&gt;Deep Bo&lt;/h1&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;link rel=&#34;stylesheet&#34; href=&#34;./deep-bo_logo.css&#34; type=&#34;text/css&#34;&gt;
&lt;script  type=&#34;text/javascript&#34;  src=&#34;deep-bo_logo.js&#34; &gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;Deep Munich is a collaborative group of Deep Learning and Neural Network researchers in Munich. Our members represent:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faculty for Informatics at TU (&lt;a href=&#34;http://www.in.tum.de/&#34; class=&#34;uri&#34;&gt;http://www.in.tum.de&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Institute for Informatics at LMU (&lt;a href=&#34;https://www.ifi.lmu.de/&#34; class=&#34;uri&#34;&gt;https://www.ifi.lmu.de&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Center for Information and Language Processing (CIS) at LMU (&lt;a href=&#34;http://www.cis.lmu.de/&#34; class=&#34;uri&#34;&gt;http://www.cis.lmu.de&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ask questions and discuss ideas in our &lt;em&gt;forum&lt;/em&gt;: &lt;a href=&#34;https://groups.google.com/forum/#!forum/deep-munich&#34; class=&#34;uri&#34;&gt;https://groups.google.com/forum/#!forum/deep-munich&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sign up for our &lt;em&gt;mailing list&lt;/em&gt; and stay up-to-date: &lt;a href=&#34;https://lists.lrz.de/mailman/listinfo/deep&#34; class=&#34;uri&#34;&gt;https://lists.lrz.de/mailman/listinfo/deep&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Join us in our &lt;em&gt;weekly meeting&lt;/em&gt; (see below).&lt;/p&gt;
&lt;h1 id=&#34;members&#34;&gt;Members&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cis.uni-muenchen.de/~davidk&#34;&gt;David Kaumanns (CIS)&lt;/a&gt; - group organizer&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cis.uni-muenchen.de/~fraser&#34;&gt;Alexander Fraser (CIS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cis.uni-muenchen.de/~schmid&#34;&gt;Helmut Schmid (CIS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dbs.ifi.lmu.de/cms/Evgeniy_Faerman&#34;&gt;Evgeniy Faerman (LMU)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cis.uni-muenchen.de/~yadollah&#34;&gt;Yadollah Yaghoobzadeh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TBA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For questions, suggestions etc., please contact the &lt;a href=&#34;mailto:david@cis.lmu.de&#34; class=&#34;email&#34;&gt;group admin&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;meetups&#34;&gt;Meetups&lt;/h1&gt;
&lt;h2 id=&#34;seminar-in-neural-machine-translation&#34;&gt;Seminar in Neural Machine Translation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://www.cis.uni-muenchen.de/~fraser/nmt_seminar_2015_WS/&#34; class=&#34;uri&#34;&gt;http://www.cis.uni-muenchen.de/~fraser/nmt_seminar_2015_WS/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thursdays 14:30 s.t., room C105 (&lt;a href=&#34;http://www.cis.uni-muenchen.de/kontakt&#34;&gt;directions&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Center for Information and Language Processing&lt;br&gt;
University of Munich&lt;br&gt;
Oettingenstraße 67&lt;br&gt;
80538 Munich&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://karpathy.github.io/&#34;&gt;Andrej Karpathy’s blog&lt;/a&gt;, notably:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://karpathy.github.io/2015/05/21/rnn-effectiveness&#34;&gt;The Unreasonable Effectiveness of Recurrent Neural Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;reading-list&#34;&gt;Reading list&lt;/h1&gt;
&lt;h2 id=&#34;section&#34;&gt;2015&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Character-aware neural language models - Yoon Kim et al. - 2015 [1]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;LSTM: A search space odyssey - Klaus Greff et al. - 2015 [2]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;An empirical exploration of recurrent network architectures - Rafal Jozefowicz et al. - 2015 [3]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Teaching machines to read and comprehend - Karl Moritz Hermann et al. - 2015 [4]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Gated feedback recurrent neural networks - Junyoung Chung et al. - 2015 [5]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;section-1&#34;&gt;2014&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Long short-term memory based recurrent neural network architectures for large vocabulary speech recognition - Haşim Sak et al. - 2014 [6]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Show and tell: A neural image caption generator - Oriol Vinyals et al. - 2014 [7]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Recurrent neural network regularization - Wojciech Zaremba et al. - 2014 [8]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Modeling compositionality with multiplicative recurrent neural networks - Ozan İrsoy et al. - 2014 [9]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Efficient GPU-based training of recurrent neural network language models using spliced sentence bunch - Xie Chen et al. - 2014 [10]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Learning phrase representations using rnn encoder-decoder for statistical machine translation - Kyunghyun Cho et al. - 2014 [11]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Deep captioning with multimodal recurrent neural networks (m-rNN) - Junhua Mao et al. - 2014 [12]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Learning longer memory in recurrent neural networks - Tomas Mikolov et al. - 2014 [13]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Learning sparse recurrent neural networks in language modeling - Yuanlong Shao - 2014 [14]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Recurrent deep neural networks for robust speech recognition - Chao Weng et al. - 2014 [15]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Recurrent neural network regularization - Wojciech Zaremba et al. - 2014 [8]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;section-2&#34;&gt;2013&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;On the difficulty of training recurrent neural networks. - Razvan Pascanu et al. - 2013 [16]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Speech recognition with deep recurrent neural networks - Alex Graves et al. - 2013 [17]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Hybrid speech recognition with deep bidirectional LSTM - Alex Graves et al. - 2013 [18]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Generating sequences with recurrent neural networks - Alex Graves - 2013 [19]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;High-performance OCR for printed english and fraktur using LSTM networks - Thomas M Breuel et al. - 2013 [20]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Recurrent convolutional neural networks for discourse compositionality - Nal Kalchbrenner et al. - 2013 [21]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Comparison of feedforward and recurrent neural network language models - Martin Sundermeyer et al. - 2013 [22]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;RNN language model with word clustering and class-based output layer - Yongzhe Shi et al. - 2013 [23]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Context dependent recurrent neural network language model. - Tomas Mikolov et al. - 2012 [24]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;section-3&#34;&gt;2012&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;A generalized LSTM-like training algorithm for second-order recurrent neural networks - Derek Monner et al. - 2012 [25]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Long-short term memory neural networks language modeling for handwriting recognition. - Volkmar Frinken et al. - 2012 [26]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;LSTM neural networks for language modeling. - Martin Sundermeyer et al. - 2012 [27]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pre-2012&#34;&gt;Pre-2012&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Generating text with recurrent neural networks - Ilya Sutskever et al. - 2011 [28]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Named entity recognition with long short-term memory - James Hammerton - 2003 [29]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Gradient flow in recurrent nets: The difficulty of learning long-term dependencies - Sepp Hochreiter et al. - 2001 [30]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Long short-term memory - Sepp Hochreiter et al. - 1997 [31]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Learning to forget: Continual prediction with LSTM - Felix A Gers et al. - 2000 [32]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Learning precise timing with LSTM recurrent networks - Felix A Gers et al. - 2003 [33]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Generating sequences with recurrent neural networks - Alex Graves - 2013 [19]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;citation&#34;&gt;Long short-term memory in recurrent neural networks - Felix Gers - 2001 [34]&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;tools&#34;&gt;Tools&lt;/h1&gt;
&lt;h2 id=&#34;torch&#34;&gt;Torch&lt;/h2&gt;
&lt;p&gt;Torch is an open source machine learning library, a scientific computing framework, and a script language based on the Lua programming language. It provides a wide range of algorithms for deep machine learning, and uses an extremely fast scripting language LuaJIT, and an underlying C implementation. ~ Wikipedia&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://tylerneylon.com/a/learn-lua&#34;&gt;Lua in 15 minutes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://torch.ch/docs/getting-started.html&#34;&gt;Getting started with Torch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://groups.google.com/forum/#!forum/torch7&#34;&gt;Torch 7 Google group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/soumith/cvpr2015/blob/master/Deep%20Learning%20with%20Torch.ipynb&#34;&gt;Deep Learning with Torch: the 60-minute blitz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;code-bases-for-torch&#34;&gt;Code bases for Torch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Multi-layer character-level Recurrent Neural Network: &lt;a href=&#34;https://github.com/karpathy/char-rnn&#34; class=&#34;uri&#34;&gt;https://github.com/karpathy/char-rnn&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Fork for word-level RNN (a little outdated): &lt;a href=&#34;https://github.com/Graydyn/char-rnn&#34; class=&#34;uri&#34;&gt;https://github.com/Graydyn/char-rnn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;RNN module for Torch nn: &lt;a href=&#34;https://github.com/Element-Research/rnn&#34; class=&#34;uri&#34;&gt;https://github.com/Element-Research/rnn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Character-Aware Neural Language Models: &lt;a href=&#34;https://github.com/yoonkim/lstm-char-cnn&#34; class=&#34;uri&#34;&gt;https://github.com/yoonkim/lstm-char-cnn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;general-nn-resources&#34;&gt;General NN Resources&lt;/h1&gt;
&lt;h2 id=&#34;online-textbooks&#34;&gt;Online textbooks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://neuralnetworksanddeeplearning.com/&#34;&gt;Neural Networks and Deep Learning (Michael Nielsen)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://goodfeli.github.io/dlbook&#34;&gt;Deep Learning (Yoshua Bengio, Ian Goodfellow and Aaron Courville)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rasbt/python-machine-learning-book&#34;&gt;Python Machine Learning Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A Tutorial on Deep Learning (Quoc V. Le)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cs.stanford.edu/~quocle/tutorial1.pdf&#34;&gt;Part 1: Nonlinear Classifiers and The Backpropagation Algorithm (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www-cs.stanford.edu/~quocle/tutorial2.pdf&#34;&gt;Part 2: Autoencoders, Convolutional Neural Networks and Recurrent Neural Networks (PDF)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;video-courses&#34;&gt;Video courses&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://class.coursera.org/neuralnets-2012-001&#34;&gt;Neural Networks for Machine Learning, Hinton (Coursera)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/learn/machine-learning&#34;&gt;Machine Learning, Andrew Ng (Coursera)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.coursera.org/course/machlearning&#34;&gt;Machine Learning, Pedro Domingos (Coursera)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mlss2014.com/materials.html&#34;&gt;Machine Learning Summer School 2014&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techtalks.tv/acl-ijcnlp-2015&#34;&gt;TechTalks from ACL-IJCNLP 2015&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cs224d.stanford.edu/syllabus.html&#34;&gt;CS224d: Deep Learning for Natural Language Processing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;blogs-articles&#34;&gt;Blogs &amp;amp; Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gavagai.se/blog/2015/09/30/a-brief-history-of-word-embeddings&#34;&gt;A brief history of word embeddings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://waitbutwhy.com/2015/01/artificial-intelligence-revolution-1.html&#34;&gt;The AI Revolution: The Road to Superintelligence (Tim Urban)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.zabarauskas.com/backpropagation-tutorial/&#34;&gt;Backpropagation Tutorial (Manfred Zabarauskas)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marekrei.com/blog&#34;&gt;Thoughts on Machine Learning and Natural Language Processing (Marek Rei)&lt;/a&gt;, e.g.:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marekrei.com/blog/dont-count-predict/&#34;&gt;Don’t Count, Predict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marekrei.com/blog/linguistic-regularities-word-representations/&#34;&gt;Linguistic Regularities in Word Representations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Neural Networks &lt;a href=&#34;http://www.marekrei.com/blog/neural-networks-part-1-background/&#34;&gt;Part 1&lt;/a&gt; &lt;a href=&#34;http://www.marekrei.com/blog/neural-networks-part-2-the-neuron/&#34;&gt;Part 2&lt;/a&gt; &lt;a href=&#34;http://www.marekrei.com/blog/neural-networks-part-3-network/&#34;&gt;Part 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.marekrei.com/blog/26-things-i-learned-in-the-deep-learning-summer-school/&#34;&gt;26 Things I Learned in the Deep Learning Summer School&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://colah.github.io/&#34;&gt;Colah’s blog&lt;/a&gt;, notably:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://colah.github.io/posts/2014-03-NN-Manifolds-Topology&#34;&gt;Neural Networks, Manifolds, and Topology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://colah.github.io/posts/2015-08-Understanding-LSTMs/&#34;&gt;Understanding LSTM Networks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://apaszke.github.io/lstm-explained.html&#34;&gt;LSTM implementation explained (Adam Paszke)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://news.startup.ml/&#34;&gt;Deep Learning News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.wildml.com/&#34;&gt;WildML (Denny Britz)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;presentations&#34;&gt;Presentations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sites.google.com/site/deeplearningsummerschool/schedule&#34;&gt;Deep Learning Summer School, Montreal 2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;references&#34; class=&#34;unnumbered&#34;&gt;References&lt;/h1&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-Kim15&#34;&gt;
&lt;p&gt;[1] Y. Kim, Y. Jernite, D. Sontag, and A. M. Rush, “Character-aware neural language models,” &lt;em&gt;arXiv preprint arXiv:1508.06615&lt;/em&gt;, 2015.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Greff15&#34;&gt;
&lt;p&gt;[2] K. Greff, R. K. Srivastava, J. Koutník, B. R. Steunebrink, and J. Schmidhuber, “LSTM: A search space odyssey,” &lt;em&gt;arXiv preprint arXiv:1503.04069&lt;/em&gt;, 2015.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Jozefowicz15&#34;&gt;
&lt;p&gt;[3] R. Jozefowicz, W. Zaremba, and I. Sutskever, “An empirical exploration of recurrent network architectures,” in &lt;em&gt;Proceedings of the 32&lt;sup&gt;nd&lt;/sup&gt; international conference on machine learning&lt;/em&gt;, 2015, pp. 2342–2350.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hermann15&#34;&gt;
&lt;p&gt;[4] K. M. Hermann, T. Kočisky, E. Grefenstette, L. Espeholt, W. Kay, M. Suleyman, and P. Blunsom, “Teaching machines to read and comprehend,” &lt;em&gt;arXiv preprint arXiv:1506.03340&lt;/em&gt;, 2015.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Chung15&#34;&gt;
&lt;p&gt;[5] J. Chung, C. Gulcehre, K. Cho, and Y. Bengio, “Gated feedback recurrent neural networks,” &lt;em&gt;arXiv preprint arXiv:1502.02367&lt;/em&gt;, 2015.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sak14a&#34;&gt;
&lt;p&gt;[6] H. Sak, A. Senior, and F. Beaufays, “Long short-term memory based recurrent neural network architectures for large vocabulary speech recognition,” &lt;em&gt;arXiv preprint arXiv:1402.1128&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Vinyals14&#34;&gt;
&lt;p&gt;[7] O. Vinyals, A. Toshev, S. Bengio, and D. Erhan, “Show and tell: A neural image caption generator,” &lt;em&gt;arXiv preprint arXiv:1411.4555&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Zaremba14&#34;&gt;
&lt;p&gt;[8] W. Zaremba, I. Sutskever, and O. Vinyals, “Recurrent neural network regularization,” &lt;em&gt;arXiv preprint arXiv:1409.2329&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Irsoy14&#34;&gt;
&lt;p&gt;[9] O. İrsoy and C. Cardie, “Modeling compositionality with multiplicative recurrent neural networks,” &lt;em&gt;arXiv preprint arXiv:1412.6577&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Chen14&#34;&gt;
&lt;p&gt;[10] X. Chen, Y. Wang, X. Liu, M. J. Gales, and P. C. Woodland, “Efficient GPU-based training of recurrent neural network language models using spliced sentence bunch,” &lt;em&gt;submitted to Proc. ISCA Interspeech&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Cho14&#34;&gt;
&lt;p&gt;[11] K. Cho, B. van Merrienboer, C. Gulcehre, F. Bougares, H. Schwenk, and Y. Bengio, “Learning phrase representations using rnn encoder-decoder for statistical machine translation,” &lt;em&gt;arXiv preprint arXiv:1406.1078&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Mao14&#34;&gt;
&lt;p&gt;[12] J. Mao, W. Xu, Y. Yang, J. Wang, and A. Yuille, “Deep captioning with multimodal recurrent neural networks (m-rNN),” &lt;em&gt;arXiv preprint arXiv:1412.6632&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Mikolov14&#34;&gt;
&lt;p&gt;[13] T. Mikolov, A. Joulin, S. Chopra, M. Mathieu, and M. Ranzato, “Learning longer memory in recurrent neural networks,” &lt;em&gt;arXiv preprint arXiv:1412.7753&lt;/em&gt;, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Shao14&#34;&gt;
&lt;p&gt;[14] Y. Shao, “Learning sparse recurrent neural networks in language modeling,” PhD thesis, The Ohio State University, 2014.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Weng14&#34;&gt;
&lt;p&gt;[15] C. Weng, D. Yu, S. Watanabe, and B.-H. F. Juang, “Recurrent deep neural networks for robust speech recognition,” in &lt;em&gt;Acoustics, speech and signal processing (iCASSP), 2014 iEEE international conference on&lt;/em&gt;, 2014, pp. 5532–5536.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Pascanu13&#34;&gt;
&lt;p&gt;[16] R. Pascanu, T. Mikolov, and Y. Bengio, “On the difficulty of training recurrent neural networks.” in &lt;em&gt;ICML (3)&lt;/em&gt;, 2013, vol. 28, pp. 1310–1318.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Graves13&#34;&gt;
&lt;p&gt;[17] A. Graves, A.-r. Mohamed, and G. Hinton, “Speech recognition with deep recurrent neural networks,” &lt;em&gt;arXiv preprint arXiv:1303.5778&lt;/em&gt;, 2013.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Graves13a&#34;&gt;
&lt;p&gt;[18] A. Graves, N. Jaitly, and A.-r. Mohamed, “Hybrid speech recognition with deep bidirectional LSTM,” in &lt;em&gt;Automatic speech recognition and understanding (aSRU), 2013 iEEE workshop on&lt;/em&gt;, 2013, pp. 273–278.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Graves13b&#34;&gt;
&lt;p&gt;[19] A. Graves, “Generating sequences with recurrent neural networks,” &lt;em&gt;arXiv preprint arXiv:1308.0850&lt;/em&gt;, 2013.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Breuel13&#34;&gt;
&lt;p&gt;[20] T. M. Breuel, A. Ul-Hasan, M. A. Al-Azawi, and F. Shafait, “High-performance OCR for printed english and fraktur using LSTM networks,” in &lt;em&gt;Document analysis and recognition (iCDAR), 2013 12&lt;sup&gt;th&lt;/sup&gt; international conference on&lt;/em&gt;, 2013, pp. 683–687.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Kalchbrenner13&#34;&gt;
&lt;p&gt;[21] N. Kalchbrenner and P. Blunsom, “Recurrent convolutional neural networks for discourse compositionality,” &lt;em&gt;arXiv preprint arXiv:1306.3584&lt;/em&gt;, 2013.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sundermeyer13&#34;&gt;
&lt;p&gt;[22] M. Sundermeyer, I. Oparin, J.-L. Gauvain, B. Freiberg, R. Schluter, and H. Ney, “Comparison of feedforward and recurrent neural network language models,” in &lt;em&gt;Acoustics, speech and signal processing (iCASSP), 2013 iEEE international conference on&lt;/em&gt;, 2013, pp. 8430–8434.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Shi13&#34;&gt;
&lt;p&gt;[23] Y. Shi, W.-Q. Zhang, J. Liu, and M. T. Johnson, “RNN language model with word clustering and class-based output layer,” &lt;em&gt;EURASIP Journal on Audio, Speech, and Music Processing&lt;/em&gt;, vol. 2013, no. 1, pp. 1–7, 2013.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Mikolov13c&#34;&gt;
&lt;p&gt;[24] T. Mikolov and G. Zweig, “Context dependent recurrent neural network language model.” in &lt;em&gt;SLT&lt;/em&gt;, 2012, pp. 234–239.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Monner12&#34;&gt;
&lt;p&gt;[25] D. Monner and J. A. Reggia, “A generalized LSTM-like training algorithm for second-order recurrent neural networks,” &lt;em&gt;Neural Networks&lt;/em&gt;, vol. 25, pp. 70–83, 2012.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Frinken12&#34;&gt;
&lt;p&gt;[26] V. Frinken, F. Zamora-Martínez, S. E. Boquera, M. J. C. Bleda, A. Fischer, and H. Bunke, “Long-short term memory neural networks language modeling for handwriting recognition.” in &lt;em&gt;ICPR&lt;/em&gt;, 2012, pp. 701–704.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sundermeyer12&#34;&gt;
&lt;p&gt;[27] M. Sundermeyer, R. Schlüter, and H. Ney, “LSTM neural networks for language modeling.” in &lt;em&gt;INTERSPEECH&lt;/em&gt;, 2012.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sutskever11&#34;&gt;
&lt;p&gt;[28] I. Sutskever, J. Martens, and G. E. Hinton, “Generating text with recurrent neural networks,” in &lt;em&gt;Proceedings of the 28th international conference on machine learning (iCML-11)&lt;/em&gt;, 2011, pp. 1017–1024.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-hammerton03&#34;&gt;
&lt;p&gt;[29] J. Hammerton, “Named entity recognition with long short-term memory,” in &lt;em&gt;Proceedings of coNLL-2003&lt;/em&gt;, 2003, pp. 172–175.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hochreiter01&#34;&gt;
&lt;p&gt;[30] S. Hochreiter, Y. Bengio, P. Frasconi, and J. Schmidhuber, “Gradient flow in recurrent nets: The difficulty of learning long-term dependencies.” Citeseer, 2001.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hochreiter97&#34;&gt;
&lt;p&gt;[31] S. Hochreiter and J. Schmidhuber, “Long short-term memory,” vol. 9, no. 8, pp. 1735–1780, 1997.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Gers00&#34;&gt;
&lt;p&gt;[32] F. A. Gers, J. Schmidhuber, and F. Cummins, “Learning to forget: Continual prediction with LSTM,” &lt;em&gt;Neural computation&lt;/em&gt;, vol. 12, no. 10, pp. 2451–2471, 2000.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Gers03&#34;&gt;
&lt;p&gt;[33] F. A. Gers, N. N. Schraudolph, and J. Schmidhuber, “Learning precise timing with LSTM recurrent networks,” &lt;em&gt;The Journal of Machine Learning Research&lt;/em&gt;, vol. 3, pp. 115–143, 2003.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Gers01&#34;&gt;
&lt;p&gt;[34] F. Gers, “Long short-term memory in recurrent neural networks,” &lt;em&gt;Unpublished PhD dissertation, École Polytechnique Fédérale de Lausanne, Lausanne, Switzerland&lt;/em&gt;, 2001.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/body&gt;&lt;div&gt;&lt;/div&gt;&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/home/DecorationDetails/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/home/DecorationDetails/</guid>
      <description>&lt;p&gt;装修指南&lt;/p&gt;

&lt;p&gt;网上有非常多有用的装修必须知道手册，这里结合自己的实际情况，以满园为模板，做一些摘要和记录。&lt;/p&gt;

&lt;p&gt;厨房&lt;/p&gt;

&lt;p&gt;装修预算 4.5万 - 5万&lt;/p&gt;

&lt;p&gt;主要物品:
定制的转角橱柜, 八千三米石英石柜台,总长四米,找人定制在一万可接受
橱柜下拉篮, 这个六百一个,一个宽六十
厨具拉篮,
垃圾桶,
吊柜,
翻折座椅,
抽油烟机, 两千
燃气灶台, 两千
多功能蒸笼,油炸锅, 八百
方太q6洗碗槽, 一万二
烤箱, 四千
海尔净水器, 两千
微波炉, 一千
冰箱, 四千
嵌入式电视, 两千
翻折餐桌, 一千&lt;/p&gt;

&lt;p&gt;厚度可能在60厘米以上&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/home/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/home/</guid>
      <description>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;
		&lt;title&gt;House&lt;/title&gt;
		&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; href=&#34;http://www.ijquery.cn/css/css.css&#34; media=&#34;all&#34; /&gt;
		&lt;!-- start --&gt;
		&lt;link rel=&#34;stylesheet&#34; type=&#34;text/css&#34; media=&#34;screen&#34; href=&#34;css/iPicture.css&#34;/&gt;
		&lt;script type=&#34;text/javascript&#34; src=&#34;js/jquery-1.8.3.min.js&#34;&gt;&lt;/script&gt;
		&lt;script type=&#34;text/javascript&#34; src=&#34;js/jquery.ipicture.js&#34;&gt;&lt;/script&gt;
		&lt;script type=&#34;text/javascript&#34; src=&#34;home.js&#34;&gt;&lt;/script&gt;
		&lt;!-- end --&gt;
	&lt;/head&gt;
	
	&lt;body&gt;
		
		&lt;div class=&#34;&#34; style=&#34;width:800px;height:400px;text-align:center;&#34;&gt;

				&lt;script type=&#34;text/javascript&#34;&gt;

// var jsonData = JSON.parse(&#39;{&#34;counters&#34;: [{&#34;counter_name&#34;: &#34;dsd&#34;, &#34;counter_type&#34;: &#34;sds&#34;, &#34;counter_unit&#34;: &#34;sds&#34;}]}&#39;);
// var jsonData = JSON.parse(json)
// for (var i = 0; i &lt; jsonData.length; i++) {
//     var counter = jsonData[i];
//     document.write(counter.counter_name);
// }

document.write(&#39;\
&lt;!-- start --&gt;\
&lt;div id=&#34;iPicture&#34; data-interaction=&#34;hover&#34;&gt;\
&lt;div class=&#34;ip_slide&#34;&gt;\
&lt;!-- 本身的图片 --&gt;\
&lt;img class=&#34;ip_tooltipImg&#34; src=&#34;&#39;+bk+&#39;&#34; /&gt;\
&#39;)

for(var tk=0;tk&lt;house.length;tk++)
{
rooms = house[tk]
document.write(&#39;sd&#39;)
for(var ti=0;ti&lt;rooms.length;ti++)
{
	pin = rooms[ti]
	document.write(&#39;&lt;div class=&#34;ip_tooltip ip_img32&#34; style=&#34;top: &#39;+pin.split(&#39;;&#39;)[2]+&#39;px; left: &#39;+pin.split(&#39;;&#39;)[3]+&#39;px;&#34; data-button=&#34;moreblue&#34; data-tooltipbg=&#34;bgblack&#34; data-round=&#34;roundBgBInner&#34; &#39;)
	if(pin.split(&#39;;&#39;)[1])
	{
		document.write(&#39;data-animationtype=&#34;&#39;+pin.split(&#39;;&#39;)[1]+&#39;-slide&#34;&gt;&lt;p&gt;&#39;)
	}
	else
	{
		document.write(&#39;data-animationtype=&#34;ltr-slide&#34;&gt;&lt;p&gt;&#39;)
	}
	if(pin.split(&#39;;&#39;)[5])
	{
		document.write(pin.split(&#39;;&#39;)[5])
	}
	if(pin.split(&#39;;&#39;)[4])
	{
		document.write(&#39;&lt;img src=&#34;&#39;+imgDir+pin.split(&#39;;&#39;)[4]+&#39;&#34; alt=&#34;&#34; &gt;&#39;)
	}
	document.write(&#39;&lt;/p&gt;&lt;/div&gt;&#39;)
}

}

document.write(&#39;\
&lt;/div&gt;\
&lt;/div&gt;\
&lt;script type=&#34;text/javascript&#34;&gt;\
$( &#34;#iPicture&#34; ).iPicture();\
&lt;\/script&gt;\
&lt;!-- end --&gt;\
&#39;)

					&lt;/script&gt;

		&lt;/div&gt;	
	&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/keyboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/keyboard/</guid>
      <description>&lt;html&gt;

&lt;head&gt;
    &lt;title&gt;Show shortcut for chrome, window, sublime-text&lt;/title&gt;
    &lt;link rel=&#34;stylesheet&#34; href=&#34;keyboard.css&#34;&gt;
    &lt;script type=&#34;text/javascript&#34;&gt;
        five = [&#34;as&#34;,&#34;cs&#34;,&#34;ac&#34;,&#34;a&#34;,&#34;c&#34;];
        row1=&#34;QWERTYUIOP&#34;;
        row2=&#34;ASDFGHJKL&#34;;
        row3=&#34;ZXCVBNM&#34;;
    &lt;/script&gt;
    &lt;script src=&#34;var_keyboard.js&#34;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;!-- &lt;div class=&#34;cable&#34;&gt; &lt;/div&gt;--&gt;
























&lt;!-- chrome short-cut --&gt;
&lt;div class=&#34;keyboard&#34;&gt;
  &lt;div class=&#34;section-a&#34;&gt;
    &lt;!-- &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key function space1&#34;&gt;Esc&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt;F1&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt;F2&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt;F3&lt;/div&gt;
      &lt;div class=&#34;key function space2&#34;&gt;F4&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F5&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F6&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F7&lt;/div&gt;
      &lt;div class=&#34;key function space2&#34;&gt; F8&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F9&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F10&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F11&lt;/div&gt;
      &lt;div class=&#34;key function&#34;&gt; F12 &lt;/div&gt; 
    &lt;/div&gt; --&gt;
        
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key num dual&#34;&gt; ~ `&lt;br&gt;&lt;as&gt;Alt+Shift&lt;/as&gt;&lt;br&gt;&lt;cs&gt;Ctrl+Shift&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;s&gt;Alt+Ctrl&lt;/s&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Alt&lt;/a&gt;&lt;br&gt;&lt;c&gt;Ctrl&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 1 !&lt;br&gt;&lt;as&gt;InputMethod&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 2 @&lt;br&gt;&lt;as&gt;Extension&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt;  &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 3 #&lt;br&gt;&lt;as&gt;ScreenShot&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 4 $&lt;br&gt;&lt;as&gt;Currency&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 5 %&lt;br&gt;&lt;as&gt;Refresh_Monkey&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 6 ^&lt;br&gt;&lt;as&gt;Grid_Rule&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 7 &amp;&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 8 *&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 9 (&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 0 )&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; _&lt;br&gt;-  &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; +&lt;br&gt;=  &lt;/div&gt;
      &lt;div class=&#34;key backspace&#34;&gt; Backspace &lt;/div&gt;
      &lt;!--END NUMBER KEYS --&gt;
    &lt;/div&gt;



    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key tab&#34;&gt; Tab &lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
row = row1;
board = chrome;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;
       &lt;div class=&#34;key dual&#34;&gt; {&lt;Br&gt;[&lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; }&lt;br&gt;] &lt;/div&gt;
      &lt;div class=&#34;key letter dual slash&#34;&gt; |&lt;br&gt;\ &lt;/div&gt;
    &lt;/div&gt;



    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key caps&#34;&gt; Caps&lt;br&gt;Lock &lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
row=row2;
board = chrome;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;
     &lt;div class=&#34;key dual&#34;&gt; :&lt;br&gt;; &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &#34;&lt;br&gt;\&#39;&lt;/div&gt;
      &lt;div class=&#34;key enter&#34;&gt; Enter &lt;/div&gt;
    &lt;/div&gt;
      


    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key shift left&#34;&gt; &lt;as&gt;Shift&lt;/as&gt;&lt;cs&gt;Shift&lt;/cs&gt; &lt;/div&gt;
&lt;script type=&#34;text/javascript&#34;&gt;
row=row3;
board = chrome;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;
&lt;div class=&#34;key dual&#34;&gt; &lt; &lt;br&gt;, &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &gt;&lt;br&gt;. &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; ?&lt;br&gt;/ &lt;/div&gt;
      &lt;div class=&#34;key shift right&#34;&gt; Shift &lt;/div&gt;
    &lt;/div&gt;



    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; &lt;cs&gt;Ctrl&lt;/cs&gt;&lt;ac&gt;Ctrl&lt;/ac&gt;&lt;c&gt;Ctrl&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &amp;#9752; &lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; &lt;as&gt;Alt&lt;/as&gt;&lt;ac&gt;Alt&lt;/ac&gt;&lt;a&gt;Alt&lt;/a&gt; &lt;/div&gt;
      &lt;div class=&#34;key space&#34;&gt; &lt;h&gt;Chrome Short-cut&lt;/h&gt;&lt;br&gt;* Deep blue is the default chrome (win) short-cut&lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; Alt &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &amp;#9752; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; Prnt &lt;/div&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; Ctrl &lt;/div&gt;
    &lt;/div&gt;
    
  &lt;/div&gt;&lt;!-- end section-a--&gt;
  
  &lt;!-- &lt;div class=&#34;section-b&#34;&gt;
    &lt;div class=&#34;key function small&#34;&gt; Prnt Scrn &lt;/div&gt;
    &lt;div class=&#34;key function small&#34;&gt; Scroll Lock &lt;/div&gt;
    &lt;div class=&#34;key function small&#34;&gt; Pause Break &lt;/div&gt;
    &lt;dic class=&#34;sec-func&#34;&gt;
        &lt;div class=&#34;key&#34;&gt; Insert &lt;/div&gt;
        &lt;div class=&#34;key&#34;&gt; Home &lt;/div&gt;
        &lt;div class=&#34;key dual&#34;&gt; Page Up &lt;/div&gt;
        &lt;div class=&#34;key&#34;&gt; Del &lt;/div&gt;
        &lt;div class=&#34;key&#34;&gt; End &lt;/div&gt;
        &lt;div class=&#34;key dual&#34;&gt; Page Down &lt;/div&gt;
        &lt;div class=&#34;arrows&#34;&gt;
            &lt;div class=&#34;key hidden&#34;&gt; &lt;/div&gt;
            &lt;div class=&#34;key&#34;&gt; ^ &lt;/div&gt;
            &lt;div class=&#34;key hidden&#34;&gt; &lt;/div&gt;
            &lt;div class=&#34;key&#34;&gt; &lt; &lt;/div&gt;
            &lt;div class=&#34;key&#34;&gt; v &lt;/div&gt;
            &lt;div class=&#34;key&#34;&gt; &gt; &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt; --&gt;
  
&lt;/div&gt;

&lt;br&gt;




















&lt;!-- sublime text short-cut --&gt;
&lt;div class=&#34;keyboard&#34;&gt;
  &lt;div class=&#34;section-a&#34;&gt;
        
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key num dual&#34;&gt; ~ `&lt;br&gt;&lt;as&gt;Alt+Shift&lt;/as&gt;&lt;br&gt;&lt;cs&gt;Ctrl+Shift&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;Alt+Ctrl&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Alt&lt;/a&gt;&lt;br&gt;&lt;c&gt;Ctrl&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 1 !&lt;br&gt;&lt;as&gt;&lt;d&gt;1_Group&lt;/d&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;group1_move&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 2 @&lt;br&gt;&lt;as&gt;&lt;d&gt;2_Group&lt;/d&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;group2_move&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 3 #&lt;br&gt;&lt;as&gt;&lt;d&gt;3_Group&lt;/d&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;group3_move&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 4 $&lt;br&gt;&lt;as&gt;&lt;d&gt;4_Col_Group&lt;/d&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;group4_move&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 5 %&lt;br&gt;&lt;as&gt;&lt;d&gt;4_Grid_Group&lt;/d&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 6 ^&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 7 &amp;&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 8 *&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 9 (&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 0 )&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; _&lt;br&gt;-  &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; +&lt;br&gt;=  &lt;/div&gt;
      &lt;div class=&#34;key backspace&#34;&gt; Backspace &lt;/div&gt;
      &lt;!--END NUMBER KEYS --&gt;
    &lt;/div&gt;
    
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key tab&#34;&gt; Tab &lt;/div&gt;

      &lt;script type=&#34;text/javascript&#34;&gt;
row = row1;
board = sublimetext;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;


      &lt;div class=&#34;key dual&#34;&gt; {&lt;Br&gt;[&lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; }&lt;br&gt;] &lt;/div&gt;
      &lt;div class=&#34;key letter dual slash&#34;&gt; |&lt;br&gt;\ &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key caps&#34;&gt; Caps&lt;br&gt;Lock &lt;/div&gt;
      
      &lt;script type=&#34;text/javascript&#34;&gt;
row = row2;
board = sublimetext;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;

      &lt;div class=&#34;key dual&#34;&gt; :&lt;br&gt;; &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &#34;&lt;br&gt;&#39;&lt;/div&gt;
      &lt;div class=&#34;key enter&#34;&gt; Enter &lt;/div&gt;
    &lt;/div&gt;
      
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key shift left&#34;&gt; &lt;as&gt;Shift&lt;/as&gt;&lt;cs&gt;Shift&lt;/cs&gt; &lt;/div&gt;
      &lt;script type=&#34;text/javascript&#34;&gt;
row = row3;
board = sublimetext;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;

      &lt;div class=&#34;key dual&#34;&gt; &lt; &lt;br&gt;, &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &gt;&lt;br&gt;. &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; ?&lt;br&gt;/ &lt;/div&gt;
      &lt;div class=&#34;key shift right&#34;&gt; Shift &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; &lt;cs&gt;Ctrl&lt;/cs&gt;&lt;ac&gt;Ctrl&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &amp;#9752; &lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; &lt;as&gt;Alt&lt;/as&gt;&lt;ac&gt;Alt&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key space&#34;&gt; &lt;h&gt;Sublimet-Text Short-cut&lt;/h&gt;&lt;br&gt;&lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; Alt &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &amp;#9752; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; Prnt &lt;/div&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; Ctrl &lt;/div&gt;
    &lt;/div&gt;
    
  &lt;/div&gt;
  
&lt;/div&gt;

&lt;br&gt;


































&lt;!-- Windows short-cut --&gt;
&lt;div class=&#34;keyboard&#34;&gt;

  &lt;div class=&#34;section-a&#34;&gt;
        
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key num dual&#34;&gt; ~ `&lt;br&gt;&lt;as&gt;Alt+Shift&lt;/as&gt;&lt;br&gt;&lt;cs&gt;Ctrl+Shift&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;Alt+Ctrl&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Alt&lt;/a&gt;&lt;br&gt;&lt;c&gt;Ctrl&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 1 !&lt;br&gt;&lt;as&gt;Sublime_Text&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style1_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 2 @&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style2_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 3 #&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style3_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;í&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 4 $&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style4_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 5 %&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style5_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 6 ^&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;Style6_Foxit&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 7 &amp;&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 8 *&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 9 (&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; 0 )&lt;br&gt;&lt;as&gt;&lt;/as&gt;&lt;br&gt;&lt;cs&gt;&lt;/cs&gt;&lt;br&gt;&lt;ac&gt;&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; _&lt;br&gt;-  &lt;/div&gt;
      &lt;div class=&#34;key num dual&#34;&gt; +&lt;br&gt;=  &lt;/div&gt;
      &lt;div class=&#34;key backspace&#34;&gt; Backspace &lt;/div&gt;
      &lt;!--END NUMBER KEYS --&gt;
    &lt;/div&gt;
    
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key tab&#34;&gt; Tab &lt;/div&gt;

      &lt;script type=&#34;text/javascript&#34;&gt;
row = row1;
board = windows;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;


      &lt;div class=&#34;key dual&#34;&gt; {&lt;Br&gt;[&lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; }&lt;br&gt;] &lt;/div&gt;
      &lt;div class=&#34;key letter dual slash&#34;&gt; |&lt;br&gt;\ &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key caps&#34;&gt; Caps&lt;br&gt;Lock &lt;/div&gt;
      &lt;script type=&#34;text/javascript&#34;&gt;
row = row2;
board = windows;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;


     &lt;div class=&#34;key dual&#34;&gt; :&lt;br&gt;; &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &#34;&lt;br&gt;&#39;&lt;/div&gt;
      &lt;div class=&#34;key enter&#34;&gt; Enter &lt;/div&gt;
    &lt;/div&gt;
      
    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key shift left&#34;&gt; &lt;as&gt;Shift&lt;/as&gt; &lt;/div&gt;
      &lt;script type=&#34;text/javascript&#34;&gt;
row = row3;
board = windows;
for(var key in row){
  document.write(&#39;&lt;div class=&#34;key letter&#34;&gt;&#39;);
  document.write(row[key]);
  for(var i in board[row[key]]){
    document.write(&#39;&lt;br&gt;&lt;&#39;+five[i]+&#39;&gt;&#39;+board[row[key]][i]+&#39;&lt;/&#39;+five[i]+&#39;&gt;&#39;);
  }
  document.write(&#39;&lt;/div&gt;&#39;);
}
&lt;/script&gt;


        &lt;div class=&#34;key dual&#34;&gt; &lt; &lt;br&gt;, &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; &gt;&lt;br&gt;. &lt;/div&gt;
      &lt;div class=&#34;key dual&#34;&gt; ?&lt;br&gt;/ &lt;/div&gt;
      &lt;div class=&#34;key shift right&#34;&gt; Shift &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&#34;section-row&#34;&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; &lt;cs&gt;Ctrl&lt;/cs&gt; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &lt;d&gt;&amp;#9752;&lt;/d&gt; &lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; &lt;ac&gt;Alt&lt;/ac&gt;&lt;br&gt;&lt;a&gt;&lt;/a&gt;&lt;br&gt;&lt;c&gt;&lt;/c&gt; &lt;/div&gt;
      &lt;div class=&#34;key space&#34;&gt; &lt;h&gt;Windows Short-cut&lt;/h&gt;&lt;br&gt;*Use Auto-Hotkey&lt;br&gt;* Always need window key &amp;#9752;. &lt;/div&gt;
      &lt;div class=&#34;key alt&#34;&gt; Alt &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; &lt;d&gt;&amp;#9752;&lt;/d&gt; &lt;/div&gt;
      &lt;div class=&#34;key&#34;&gt; Prnt &lt;/div&gt;
      &lt;div class=&#34;key ctrl&#34;&gt; Ctrl &lt;/div&gt;
    &lt;/div&gt;
    
  &lt;/div&gt;
  
&lt;/div&gt;







&lt;/body&gt;
&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/pdf_annotation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/pdf_annotation/</guid>
      <description>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&#34;utf-8&#34;&gt;
&lt;title&gt;pdf annotation definition&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;article class=&#34;markdown-body&#34;&gt;&lt;p&gt;相当于只阅读天蓝和黄色,大概就能明白文章脉络,章节内容&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;th textcolor=&#34;red&#34;&gt;笔记颜色 and 作用&lt;/th&gt;
&lt;th&gt;Foxit&lt;/th&gt;
&lt;th&gt;GistNote(网页端)&lt;/th&gt;
&lt;th&gt;ios PDF-expert&lt;/th&gt;

&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font color=&#39;#ff00fe&#39;&gt;粉色&lt;/font&gt; - 高亮 &amp;lsquo;定义,假设,前提条件&amp;rsquo;等之前就已经存在的&amp;rsquo;问题&amp;rsquo;等&lt;/td&gt;
&lt;td style=&#34;background-color:#ff00fe;&#34;&gt;5 - 粉色框&lt;/td&gt;
&lt;td style=&#34;background-color:#ffa4be;&#34; align=&#34;left&#34;&gt;#ffa4be&lt;/td&gt;
&lt;td style=&#34;background-color:#ffbfce;&#34;&gt;手动画笔高亮(粉色#ffbfce)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font style=&#34;color:#00ffff;&#34;&gt;天蓝&lt;/font&gt; - 高亮 &amp;lsquo;非常重要的结论&amp;rsquo;&lt;/td&gt;
&lt;td style=&#34;background-color:#00ffff;&#34;&gt;4- 天蓝波浪线&lt;/td&gt;
&lt;td style=&#34;background-color:#b4ffeb;&#34; align=&#34;left&#34;&gt;#b4ffeb&lt;/td&gt;
&lt;td style=&#34;background-color:#80dfff;&#34;&gt;手动画笔高亮(天蓝#80dfff)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font  style=&#34;color:#ffff00;&#34;&gt;黄色&lt;/font&gt; - 高亮 &amp;lsquo;分析&amp;rsquo;,&amp;rsquo;过程&amp;rsquo;&lt;/td&gt;
&lt;td style=&#34;background-color:#ffff00;&#34;&gt;1- 黄色高亮&lt;/td&gt;
&lt;td style=&#34;background-color:#fffb78;&#34; align=&#34;left&#34;&gt;#fffb78&lt;/td&gt;
&lt;td style=&#34;background-color:#ffff00;&#34;&gt;高亮工具(黄色#ffff00)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font  style=&#34;color:#ff7320;&#34;&gt;橙色&lt;/font&gt; - 高亮 &amp;lsquo;积极向上的positive的正面的&amp;rsquo;内容&lt;/td&gt;
&lt;td style=&#34;background-color:#ff7320;&#34;&gt;2 - 橙色下划线&lt;/td&gt;
&lt;td style=&#34;background-color:#ffde70;&#34; align=&#34;left&#34;&gt;#ffde70&lt;/td&gt;
&lt;td style=&#34;background-color:#ff8000;&#34;&gt;下划线工具(橙色#ff8000)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font  style=&#34;color:#c54ffc;&#34;&gt;紫色&lt;/font&gt; - 高亮 &amp;lsquo;消极的反面观点&amp;rsquo;&lt;/td&gt;
&lt;td style=&#34;background-color:#c54ffc;&#34;&gt;3 - 紫色删除线&lt;/td&gt;
&lt;td style=&#34;background-color:#fabdff;&#34; align=&#34;left&#34;&gt;#fabdff&lt;/td&gt;
&lt;td style=&#34;background-color:#a22cff;&#34;&gt;删除线工具(紫色#a22cff)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;background-color:#d9d9d9;&#34;&gt;&lt;font  style=&#34;color:#00fe00;&#34;&gt;绿色&lt;/font&gt; - 因为平台关系,不推荐使用.foxit上表示有疑问的地方&lt;/td&gt;
&lt;td style=&#34;background-color:#00fe00;&#34;&gt;6 - 绿色删除线+弹出框&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;无&lt;/td&gt;
&lt;td style=&#34;background-color:#00ff00;&#34;&gt;手写(绿色#00ff00)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; example &lt;/td&gt;
&lt;td&gt; &lt;img src=&#39;foxit_color.png&#39; height=200px;/&gt; &lt;/td&gt;
&lt;td&gt; &lt;img src=&#39;gistnote_color.png&#39; height=200px;/&gt; &lt;/td&gt;
&lt;td&gt; &lt;img src=&#39;ios_color.png&#39; height=200px;/&gt; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/article&gt;


&lt;/body&gt;&lt;/html&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/CONTRIBUTING/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/CONTRIBUTING/</guid>
      <description>

&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Please keep the &lt;a href=&#34;http://github.com/hakimel/reveal.js/issues&#34;&gt;issue tracker&lt;/a&gt; limited to &lt;strong&gt;bug reports&lt;/strong&gt;, &lt;strong&gt;feature requests&lt;/strong&gt; and &lt;strong&gt;pull requests&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;personal-support&#34;&gt;Personal Support&lt;/h3&gt;

&lt;p&gt;If you have personal support or setup questions the best place to ask those are &lt;a href=&#34;http://stackoverflow.com/questions/tagged/reveal.js&#34;&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;bug-reports&#34;&gt;Bug Reports&lt;/h3&gt;

&lt;p&gt;When reporting a bug make sure to include information about which browser and operating system you are on as well as the necessary steps to reproduce the issue. If possible please include a link to a sample presentation where the bug can be tested.&lt;/p&gt;

&lt;h3 id=&#34;pull-requests&#34;&gt;Pull Requests&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Should follow the coding style of the file you work in, most importantly:

&lt;ul&gt;
&lt;li&gt;Tabs to indent&lt;/li&gt;
&lt;li&gt;Single-quoted strings&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Should be made towards the &lt;strong&gt;dev branch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Should be submitted from a feature/topic branch (not your master)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;plugins&#34;&gt;Plugins&lt;/h3&gt;

&lt;p&gt;Please do not submit plugins as pull requests. They should be maintained in their own separate repository. More information here: &lt;a href=&#34;https://github.com/hakimel/reveal.js/wiki/Plugin-Guidelines&#34;&gt;https://github.com/hakimel/reveal.js/wiki/Plugin-Guidelines&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/LocalTest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/LocalTest/</guid>
      <description>&lt;!doctype html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;
		&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&#34;&gt;

		&lt;title&gt;reveal.js&lt;/title&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/reveal.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/theme/black.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/theme/boRevealStyle.css&#34;&gt;

		&lt;!-- Theme used for syntax highlighting of code --&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/zenburn.css&#34;&gt;

		&lt;!-- Printing and PDF exports --&gt;
		&lt;script&gt;
			var link = document.createElement( &#39;link&#39; );
			link.rel = &#39;stylesheet&#39;;
			link.type = &#39;text/css&#39;;
			link.href = window.location.search.match( /print-pdf/gi ) ? &#39;css/print/pdf.css&#39; : &#39;css/print/paper.css&#39;;
			document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link );
		&lt;/script&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;div class=&#34;reveal&#34;&gt;
			&lt;div class=&#34;slides&#34;&gt;
				&lt;section data-markdown=&#34;https://rawgit.com/BeRANDON/ResearchReport/master/2017-04-07-Debate_videos_on_youtube.md&#34;
						 data-separator=&#34;^\n\n\n&#34;  
						 data-separator-vertical=&#34;^\n\n&#34;  
						 data-separator-notes=&#34;^Note:&#34;  
						 data-charset=&#34;utf-8&#34;&gt;


				&lt;/section&gt;
			&lt;/div&gt;
		&lt;/div&gt;

		&lt;script src=&#34;lib/js/head.min.js&#34;&gt;&lt;/script&gt;
		&lt;script src=&#34;js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
			// More info https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				history: true,

				// More info https://github.com/hakimel/reveal.js#dependencies
				dependencies: [
					{ src: &#39;plugin/markdown/marked.js&#39; },
					{ src: &#39;plugin/markdown/markdown.js&#39; },
					// { src: &#39;plugin/notes/notes.js&#39;, async: true },
					{ src: &#39;plugin/highlight/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
				]
			});
		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/README/</guid>
      <description>

&lt;h1 id=&#34;reveal-js-build-status-https-travis-ci-org-hakimel-reveal-js-svg-branch-master-https-travis-ci-org-hakimel-reveal-js-a-href-https-slides-com-ref-github-img-src-https-s3-amazonaws-com-static-slid-es-images-slides-github-banner-320x40-png-1-alt-slides-width-160-height-20-a&#34;&gt;reveal.js &lt;a href=&#34;https://travis-ci.org/hakimel/reveal.js&#34;&gt;&lt;img src=&#34;https://travis-ci.org/hakimel/reveal.js.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;https://slides.com?ref=github&#34;&gt;&lt;img src=&#34;https://s3.amazonaws.com/static.slid.es/images/slides-github-banner-320x40.png?1&#34; alt=&#34;Slides&#34; width=&#34;160&#34; height=&#34;20&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;A framework for easily creating beautiful presentations using HTML. &lt;a href=&#34;http://lab.hakim.se/reveal-js/&#34;&gt;Check out the live demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;reveal.js comes with a broad range of features including &lt;a href=&#34;https://github.com/hakimel/reveal.js#markup&#34;&gt;nested slides&lt;/a&gt;, &lt;a href=&#34;https://github.com/hakimel/reveal.js#markdown&#34;&gt;Markdown contents&lt;/a&gt;, &lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;PDF export&lt;/a&gt;, &lt;a href=&#34;https://github.com/hakimel/reveal.js#speaker-notes&#34;&gt;speaker notes&lt;/a&gt; and a &lt;a href=&#34;https://github.com/hakimel/reveal.js#api&#34;&gt;JavaScript API&lt;/a&gt;. There&amp;rsquo;s also a fully featured visual editor and platform for sharing reveal.js presentations at &lt;a href=&#34;https://slides.com?ref=github&#34;&gt;slides.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#online-editor&#34;&gt;Online Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#instructions&#34;&gt;Instructions&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#markup&#34;&gt;Markup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#markdown&#34;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#element-attributes&#34;&gt;Element Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slide-attributes&#34;&gt;Slide Attributes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#presentation-size&#34;&gt;Presentation Size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ready-event&#34;&gt;Ready Event&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#auto-sliding&#34;&gt;Auto-sliding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#keyboard-bindings&#34;&gt;Keyboard Bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#touch-navigation&#34;&gt;Touch Navigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#lazy-loading&#34;&gt;Lazy Loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#api&#34;&gt;API&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#slide-changed-event&#34;&gt;Slide Changed Event&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#presentation-state&#34;&gt;Presentation State&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slide-states&#34;&gt;Slide States&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slide-backgrounds&#34;&gt;Slide Backgrounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#parallax-background&#34;&gt;Parallax Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slide-transitions&#34;&gt;Slide Transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#internal-links&#34;&gt;Internal links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fragments&#34;&gt;Fragments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fragment-events&#34;&gt;Fragment events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#code-syntax-highlighting&#34;&gt;Code syntax highlighting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slide-number&#34;&gt;Slide number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#overview-mode&#34;&gt;Overview mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fullscreen-mode&#34;&gt;Fullscreen mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#embedded-media&#34;&gt;Embedded media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#stretching-elements&#34;&gt;Stretching elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#postmessage-api&#34;&gt;postMessage API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#pdf-export&#34;&gt;PDF Export&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#theming&#34;&gt;Theming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#speaker-notes&#34;&gt;Speaker Notes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#share-and-print-speaker-notes&#34;&gt;Share and Print Speaker Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#server-side-speaker-notes&#34;&gt;Server Side Speaker Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiplexing&#34;&gt;Multiplexing&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#master-presentation&#34;&gt;Master presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#client-presentation&#34;&gt;Client presentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#socketio-server&#34;&gt;Socket.io server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#mathjax&#34;&gt;MathJax&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#installation&#34;&gt;Installation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#basic-setup&#34;&gt;Basic setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#full-setup&#34;&gt;Full setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#folder-structure&#34;&gt;Folder Structure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;more-reading&#34;&gt;More reading&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js/releases&#34;&gt;Changelog&lt;/a&gt;: Up-to-date version history.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js/wiki/Example-Presentations&#34;&gt;Examples&lt;/a&gt;: Presentations created with reveal.js, add your own!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js/wiki/Browser-Support&#34;&gt;Browser Support&lt;/a&gt;: Explanation of browser support and fallbacks.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js/wiki/Plugins,-Tools-and-Hardware&#34;&gt;Plugins&lt;/a&gt;: A list of plugins that can be used to extend reveal.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;online-editor&#34;&gt;Online Editor&lt;/h2&gt;

&lt;p&gt;Presentations are written using HTML or Markdown but there&amp;rsquo;s also an online editor for those of you who prefer a graphical interface. Give it a try at &lt;a href=&#34;https://slides.com?ref=github&#34;&gt;https://slides.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;instructions&#34;&gt;Instructions&lt;/h2&gt;

&lt;h3 id=&#34;markup&#34;&gt;Markup&lt;/h3&gt;

&lt;p&gt;Here&amp;rsquo;s a barebones example of a fully working reveal.js presentation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;css/reveal.css&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;css/theme/white.css&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;reveal&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slides&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Slide 1&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Slide 2&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;js/reveal.js&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The presentation markup hierarchy needs to be &lt;code&gt;.reveal &amp;gt; .slides &amp;gt; section&lt;/code&gt; where the &lt;code&gt;section&lt;/code&gt; represents one slide and can be repeated indefinitely. If you place multiple &lt;code&gt;section&lt;/code&gt; elements inside of another &lt;code&gt;section&lt;/code&gt; they will be shown as vertical slides. The first of the vertical slides is the &amp;ldquo;root&amp;rdquo; of the others (at the top), and will be included in the horizontal sequence. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;reveal&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slides&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Single Horizontal Slide&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Vertical Slide 1&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Vertical Slide 2&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;markdown&#34;&gt;Markdown&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s possible to write your slides using Markdown. To enable Markdown, add the &lt;code&gt;data-markdown&lt;/code&gt; attribute to your &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; elements and wrap the contents in a &lt;code&gt;&amp;lt;script type=&amp;quot;text/template&amp;quot;&amp;gt;&lt;/code&gt; like the example below.&lt;/p&gt;

&lt;p&gt;This is based on &lt;a href=&#34;https://gist.github.com/1343518&#34;&gt;data-markdown&lt;/a&gt; from &lt;a href=&#34;https://github.com/paulirish&#34;&gt;Paul Irish&lt;/a&gt; modified to use &lt;a href=&#34;https://github.com/chjj/marked&#34;&gt;marked&lt;/a&gt; to support &lt;a href=&#34;https://help.github.com/articles/github-flavored-markdown&#34;&gt;GitHub Flavored Markdown&lt;/a&gt;. Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-markdown&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;text/template&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #ef6155&#34;&gt;##&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Page&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;title&lt;/span&gt;

		&lt;span style=&#34;color: #06b6ef&#34;&gt;A&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;paragraph&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;some&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;text&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;link&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;](&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;//hakim.se).&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;external-markdown&#34;&gt;External Markdown&lt;/h4&gt;

&lt;p&gt;You can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file. The &lt;code&gt;data-charset&lt;/code&gt; attribute is optional and specifies which charset to use when loading the external file.&lt;/p&gt;

&lt;p&gt;When used locally, this feature requires that reveal.js &lt;a href=&#34;#full-setup&#34;&gt;runs from a local web server&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-markdown&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;example.md&amp;quot;&lt;/span&gt;  
         &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^\n\n\n&amp;quot;&lt;/span&gt;  
         &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator-vertical&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^\n\n&amp;quot;&lt;/span&gt;  
         &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator-notes&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^Note:&amp;quot;&lt;/span&gt;  
         &lt;span style=&#34;color: #06b6ef&#34;&gt;data-charset&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;iso-8859-15&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;element-attributes&#34;&gt;Element Attributes&lt;/h4&gt;

&lt;p&gt;Special syntax (in html comment) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-markdown&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;text/template&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Item&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;&amp;lt;!--&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;fragment&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;--&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Item&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;&amp;lt;!--&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;element&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;fragment&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;--&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;slide-attributes&#34;&gt;Slide Attributes&lt;/h4&gt;

&lt;p&gt;Special syntax (in html comment) is available for adding attributes to the slide &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; elements generated by your Markdown.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-markdown&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;text/template&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;&amp;lt;!--&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;slide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;background&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#ff0000&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;--&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;Markdown&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;content&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;At the end of your page you need to initialize reveal by running the following code. Note that all config values are optional and will default as specified below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Display controls in the bottom right corner&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;controls&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Display a presentation progress bar&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;progress&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Display the page number of the current slide&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;slideNumber&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Push each slide change to the browser history&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;history&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Enable keyboard shortcuts for navigation&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;keyboard&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Enable the slide overview mode&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;overview&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Vertical centering of slides&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;center&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Enables touch navigation on devices with touch input&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;touch&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Loop the presentation&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Change the presentation direction to be RTL&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;rtl&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Randomizes the order of slides each time the presentation loads&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;shuffle&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Turns fragments on and off globally&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;fragments&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Flags if the presentation is running in an embedded mode,&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// i.e. contained within a limited portion of the screen&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;embedded&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Flags if we should show a help overlay when the questionmark&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// key is pressed&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;help&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Flags if speaker notes should be visible to all viewers&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;showNotes&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Number of milliseconds between automatically proceeding to the&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// next slide, disabled when set to 0, this value can be overwritten&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// by using a data-autoslide attribute on your slides&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Stop auto-sliding after user input&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlideStoppable&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Use this method for navigation when auto-sliding&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlideMethod&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;navigateNext&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Enable slide navigation via mouse wheel&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;mouseWheel&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Hides the address bar on mobile devices&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;hideAddressBar&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Opens links in an iframe preview overlay&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;previewLinks&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Transition style&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// none/fade/slide/convex/concave/zoom&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Transition speed&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;transitionSpeed&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// default/fast/slow&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Transition style for full page slide backgrounds&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;backgroundTransition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// none/fade/slide/convex/concave/zoom&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Number of slides away from the current that are visible&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;viewDistance&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Parallax background image&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundImage&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// e.g. &amp;quot;&amp;#39;https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg&amp;#39;&amp;quot;&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Parallax background size&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundSize&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// CSS syntax, e.g. &amp;quot;2100px 900px&amp;quot;&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Number of pixels to move the parallax background per slide&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// - Calculated automatically unless specified&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// - Set to 0 to disable movement along an axis&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundHorizontal&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundVertical&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;null&lt;/span&gt;

&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The configuration can be updated after initialization using the &lt;code&gt;configure&lt;/code&gt; method:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// Turn autoSlide off&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Start auto-sliding every 5s&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;5000&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;presentation-size&#34;&gt;Presentation Size&lt;/h3&gt;

&lt;p&gt;All presentations have a normal size, that is the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.&lt;/p&gt;

&lt;p&gt;See below for a list of configuration options related to sizing, including default values:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;

	&lt;span style=&#34;color: #e7e9db&#34;&gt;...&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// The &amp;quot;normal&amp;quot; size of the presentation, aspect ratio will be preserved&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// when the presentation is scaled to fit different resolutions. Can be&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// specified using percentage units.&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;960&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;700&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Factor of the display size that should remain empty around the content&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;margin&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Bounds for smallest/largest possible scale to apply to content&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;minScale&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0.2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;maxScale&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1.5&lt;/span&gt;

&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;

	&lt;span style=&#34;color: #e7e9db&#34;&gt;...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;margin&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;minScale&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;maxScale&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h3&gt;

&lt;p&gt;Reveal.js doesn&amp;rsquo;t &lt;em&gt;rely&lt;/em&gt; on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Cross-browser shim that fully implements classList - https://github.com/eligrey/classList.js/&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;lib/js/classList.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;condition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;document.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;classList&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// Interpret Markdown in &amp;lt;section&amp;gt; elements&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/markdown/marked.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;condition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;!!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;document.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;querySelector&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;[data-markdown]&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/markdown/markdown.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;condition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;!!&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;document.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;querySelector&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;[data-markdown]&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// Syntax highlight for &amp;lt;code&amp;gt; elements&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/highlight/highlight.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;callback&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;hljs&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initHighlightingOnLoad&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// Zoom in and out with Alt+click&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/zoom-js/zoom.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// Speaker notes&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/notes/notes.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// MathJax&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/math/math.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can add your own extensions using the same syntax. The following properties are available for each dependency object:
- &lt;strong&gt;src&lt;/strong&gt;: Path to the script to load
- &lt;strong&gt;async&lt;/strong&gt;: [optional] Flags if the script should load after reveal.js has started, defaults to false
- &lt;strong&gt;callback&lt;/strong&gt;: [optional] Function to execute when the script has loaded
- &lt;strong&gt;condition&lt;/strong&gt;: [optional] Function which must return true for the script to be loaded&lt;/p&gt;

&lt;h3 id=&#34;ready-event&#34;&gt;Ready Event&lt;/h3&gt;

&lt;p&gt;A &amp;lsquo;ready&amp;rsquo; event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already &amp;lsquo;ready&amp;rsquo; you can call &lt;code&gt;Reveal.isReady()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;ready&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// event.currentSlide, event.indexh, event.indexv&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;auto-sliding&#34;&gt;Auto-sliding&lt;/h3&gt;

&lt;p&gt;Presentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// Slide every five seconds&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
  &lt;span style=&#34;color: #06b6ef&#34;&gt;autoSlide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;5000&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing »a« on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying &lt;code&gt;autoSlideStoppable: false&lt;/code&gt; in your reveal.js config.&lt;/p&gt;

&lt;p&gt;You can also override the slide duration for individual slides and fragments by using the &lt;code&gt;data-autoslide&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-autoslide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;2000&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;After 2 seconds the first fragment will be shown.&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-autoslide&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;10000&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;After 10 seconds the next fragment will be shown.&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Now, the fragment is displayed for 2 seconds before the next slide is shown.&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To override the method used for navigation when auto-sliding, you can specify the &lt;code&gt;autoSlideMethod&lt;/code&gt; setting. To only navigate along the top layer and ignore vertical slides, set this to &lt;code&gt;Reveal.navigateRight&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Whenever the auto-slide mode is resumed or paused the &lt;code&gt;autoslideresumed&lt;/code&gt; and &lt;code&gt;autoslidepaused&lt;/code&gt; events are fired.&lt;/p&gt;

&lt;h3 id=&#34;keyboard-bindings&#34;&gt;Keyboard Bindings&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;re unhappy with any of the default keyboard bindings you can override them using the &lt;code&gt;keyboard&lt;/code&gt; config option:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
  &lt;span style=&#34;color: #06b6ef&#34;&gt;keyboard&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color: #f99b15&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;next&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// go to the next slide when the ENTER key is pressed&lt;/span&gt;
    &lt;span style=&#34;color: #f99b15&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{},&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// do something custom when ESC is pressed&lt;/span&gt;
    &lt;span style=&#34;color: #f99b15&#34;&gt;32&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// don&amp;#39;t do anything when SPACE is pressed (i.e. disable a reveal.js default binding)&lt;/span&gt;
  &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;touch-navigation&#34;&gt;Touch Navigation&lt;/h3&gt;

&lt;p&gt;You can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the &lt;code&gt;touch&lt;/code&gt; config option to false when initializing reveal.js.&lt;/p&gt;

&lt;p&gt;If there&amp;rsquo;s some part of your content that needs to remain accessible to touch events you&amp;rsquo;ll need to highlight this by adding a &lt;code&gt;data-prevent-swipe&lt;/code&gt; attribute to the element. One common example where this is useful is elements that need to be scrolled.&lt;/p&gt;

&lt;h3 id=&#34;lazy-loading&#34;&gt;Lazy Loading&lt;/h3&gt;

&lt;p&gt;When working on presentation with a lot of media or iframe content it&amp;rsquo;s important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the &lt;code&gt;viewDistance&lt;/code&gt; configuration option.&lt;/p&gt;

&lt;p&gt;To enable lazy loading all you need to do is change your &amp;ldquo;src&amp;rdquo; attributes to &amp;ldquo;data-src&amp;rdquo; as shown below. This is supported for image, video, audio and iframe elements. Lazy loaded iframes will also unload when the containing slide is no longer visible.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;image.png&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;iframe&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;http://hakim.se&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;iframe&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;video.webm&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;video/webm&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;video.mp4&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;video/mp4&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;api&#34;&gt;API&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;Reveal&lt;/code&gt; object exposes a JavaScript API for controlling navigation and reading state:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// Navigation&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;slide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;indexh&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;indexv&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;indexf&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;left&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;right&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;up&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;down&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;prev&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;next&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;prevFragment&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;nextFragment&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Randomize the order of slides&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;shuffle&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Toggle presentation states, optionally pass true/false to force on/off&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;toggleOverview&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;togglePause&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;toggleAutoSlide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Change a config value at runtime&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;controls&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Returns the present configuration options&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getConfig&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Fetch the current scale of the presentation&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getScale&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Retrieves the previous and current slide elements&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getPreviousSlide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getCurrentSlide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getIndices&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// { h: 0, v: 0 } }&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getProgress&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// 0-1&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getTotalSlides&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Returns the speaker notes for the current slide&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getSlideNotes&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// State checks&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;isFirstSlide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;isLastSlide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;isOverview&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;isPaused&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;isAutoSliding&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;slide-changed-event&#34;&gt;Slide Changed Event&lt;/h3&gt;

&lt;p&gt;A &amp;lsquo;slidechanged&amp;rsquo; event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.&lt;/p&gt;

&lt;p&gt;Some libraries, like MathJax (see &lt;a href=&#34;https://github.com/hakimel/reveal.js/issues/226#issuecomment-10261609&#34;&gt;#226&lt;/a&gt;), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;slidechanged&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// event.previousSlide, event.currentSlide, event.indexh, event.indexv&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;presentation-state&#34;&gt;Presentation State&lt;/h3&gt;

&lt;p&gt;The presentation&amp;rsquo;s current state can be fetched by using the &lt;code&gt;getState&lt;/code&gt; method. A state object contains all of the information required to put the presentation back as it was when &lt;code&gt;getState&lt;/code&gt; was first called. Sort of like a snapshot. It&amp;rsquo;s a simple object that can easily be stringified and persisted or sent over the wire.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;slide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;// we&amp;#39;re on slide 1&lt;/span&gt;

&lt;span style=&#34;color: #815ba4&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;getState&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;

&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;slide&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;// we&amp;#39;re on slide 3&lt;/span&gt;

&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;setState&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;state&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;// we&amp;#39;re back on slide 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;slide-states&#34;&gt;Slide States&lt;/h3&gt;

&lt;p&gt;If you set &lt;code&gt;data-state=&amp;quot;somestate&amp;quot;&lt;/code&gt; on a slide &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt;, &amp;ldquo;somestate&amp;rdquo; will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.&lt;/p&gt;

&lt;p&gt;Furthermore you can also listen to these changes in state via JavaScript:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;somestate&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// TODO: Sprinkle magic&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;slide-backgrounds&#34;&gt;Slide Backgrounds&lt;/h3&gt;

&lt;p&gt;Slides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a &lt;code&gt;data-background&lt;/code&gt; attribute to your &lt;code&gt;&amp;lt;section&amp;gt;&lt;/code&gt; elements. Four different types of backgrounds are supported: color, image, video and iframe.&lt;/p&gt;

&lt;h5 id=&#34;color-backgrounds&#34;&gt;Color Backgrounds&lt;/h5&gt;

&lt;p&gt;All CSS color formats are supported, like rgba() or hsl().&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-color&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#ff0000&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Color&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&#34;image-backgrounds&#34;&gt;Image Backgrounds&lt;/h5&gt;

&lt;p&gt;By default, background images are resized to cover the full page. Available options:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Attribute&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Default&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-image&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;URL of the image to show. GIFs restart when the slide opens.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-size&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;cover&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;See &lt;a href=&#34;https://developer.mozilla.org/docs/Web/CSS/background-size&#34;&gt;background-size&lt;/a&gt; on MDN.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-position&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;center&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;See &lt;a href=&#34;https://developer.mozilla.org/docs/Web/CSS/background-position&#34;&gt;background-position&lt;/a&gt; on MDN.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-repeat&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;no-repeat&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;See &lt;a href=&#34;https://developer.mozilla.org/docs/Web/CSS/background-repeat&#34;&gt;background-repeat&lt;/a&gt; on MDN.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-image&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;http://example.com/image.png&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Image&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-image&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;http://example.com/image.png&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-size&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;100px&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-repeat&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;repeat&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;This background image will be sized to 100px and repeated&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&#34;video-backgrounds&#34;&gt;Video Backgrounds&lt;/h5&gt;

&lt;p&gt;Automatically plays a full size video behind the slide.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Attribute&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Default&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-video&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A single video source, or a comma separated list of video sources.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-video-loop&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;false&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Flags if the video should play repeatedly.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;data-background-video-muted&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;false&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Flags if the audio should be muted.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-video&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-video-loop&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-video-muted&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Video&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&#34;iframe-backgrounds&#34;&gt;Iframe Backgrounds&lt;/h5&gt;

&lt;p&gt;Embeds a web page as a background. Note that since the iframe is in the background layer, behind your slides, it is not possible to interact with the embedded page.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-background-iframe&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;https://slides.com&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Iframe&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h5 id=&#34;background-transitions&#34;&gt;Background Transitions&lt;/h5&gt;

&lt;p&gt;Backgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing &lt;code&gt;backgroundTransition: &#39;slide&#39;&lt;/code&gt; to the &lt;code&gt;Reveal.initialize()&lt;/code&gt; call. Alternatively you can set &lt;code&gt;data-background-transition&lt;/code&gt; on any section with a background to override that specific transition.&lt;/p&gt;

&lt;h3 id=&#34;parallax-background&#34;&gt;Parallax Background&lt;/h3&gt;

&lt;p&gt;If you want to use a parallax scrolling background, set the first two config properties below when initializing reveal.js (the other two are optional).&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Parallax background image&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundImage&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// e.g. &amp;quot;https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg&amp;quot;&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Parallax background size&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundSize&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// CSS syntax, e.g. &amp;quot;2100px 900px&amp;quot; - currently only pixels are supported (don&amp;#39;t use % or auto)&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Number of pixels to move the parallax background per slide&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// - Calculated automatically unless specified&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// - Set to 0 to disable movement along an axis&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundHorizontal&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;parallaxBackgroundVertical&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;50&lt;/span&gt;

&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure that the background size is much bigger than screen size to allow for some scrolling. &lt;a href=&#34;http://lab.hakim.se/reveal-js/?parallaxBackgroundImage=https%3A%2F%2Fs3.amazonaws.com%2Fhakim-static%2Freveal-js%2Freveal-parallax-1.jpg&amp;amp;parallaxBackgroundSize=2100px%20900px&#34;&gt;View example&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;slide-transitions&#34;&gt;Slide Transitions&lt;/h3&gt;

&lt;p&gt;The global presentation transition is set using the &lt;code&gt;transition&lt;/code&gt; config value. You can override the global transition for a specific slide by using the &lt;code&gt;data-transition&lt;/code&gt; attribute:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;zoom&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;This slide will override the presentation transition and zoom!&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition-speed&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fast&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Choose from three transition speeds: default, fast or slow!&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also use different in and out transitions for the same slide:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slide&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    The train goes on …
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slide&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    and on …
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slide-in fade-out&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    and stops.
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fade-in slide-out&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    (Passengers entering and leaving)
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-transition&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;slide&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    And it starts again.
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;internal-links&#34;&gt;Internal links&lt;/h3&gt;

&lt;p&gt;It&amp;rsquo;s easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (&lt;code&gt;&amp;lt;section id=&amp;quot;some-slide&amp;quot;&amp;gt;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#/2/2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Link&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#/some-slide&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Link&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an &lt;code&gt;enabled&lt;/code&gt; class when it&amp;rsquo;s a valid navigation route based on the current slide.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-left&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-right&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-up&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-down&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-prev&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;&amp;lt;!-- Previous vertical or horizontal slide --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;navigate-next&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;&amp;lt;!-- Next vertical or horizontal slide --&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;fragments&#34;&gt;Fragments&lt;/h3&gt;

&lt;p&gt;Fragments are used to highlight individual elements on a slide. Every element with the class &lt;code&gt;fragment&lt;/code&gt; will be stepped through before moving on to the next slide. Here&amp;rsquo;s an example: &lt;a href=&#34;http://lab.hakim.se/reveal-js/#/fragments&#34;&gt;http://lab.hakim.se/reveal-js/#/fragments&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment grow&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;grow&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment shrink&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;shrink&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment fade-out&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;fade-out&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment fade-up&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;fade-up (also down, left and right!)&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment current-visible&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;visible only once&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment highlight-current-blue&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;blue only once&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment highlight-red&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;highlight-red&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment highlight-green&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;highlight-green&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment highlight-blue&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;highlight-blue&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Multiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment fade-in&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment fade-out&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;I&amp;#39;ll fade in, then out&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The display order of fragments can be controlled using the &lt;code&gt;data-fragment-index&lt;/code&gt; attribute.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-fragment-index&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Appears last&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-fragment-index&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Appears first&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;fragment&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-fragment-index&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Appears second&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;fragment-events&#34;&gt;Fragment events&lt;/h3&gt;

&lt;p&gt;When a slide fragment is either shown or hidden reveal.js will dispatch an event.&lt;/p&gt;

&lt;p&gt;Some libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;fragmentshown&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// event.fragment = the fragment DOM element&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;fragmenthidden&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// event.fragment = the fragment DOM element&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;code-syntax-highlighting&#34;&gt;Code syntax highlighting&lt;/h3&gt;

&lt;p&gt;By default, Reveal is configured with &lt;a href=&#34;https://highlightjs.org/&#34;&gt;highlight.js&lt;/a&gt; for code syntax highlighting. Below is an example with clojure code that will be syntax highlighted. When the &lt;code&gt;data-trim&lt;/code&gt; attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using &lt;code&gt;&amp;lt;mark&amp;gt;&lt;/code&gt; to call out a line of code, add the &lt;code&gt;data-noescape&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;code&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-trim&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-noescape&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
(def lazy-fib
  (concat
   [0 1]
   &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;((fn rfib [a b]&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;mark&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;code&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;pre&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;slide-number&#34;&gt;Slide number&lt;/h3&gt;

&lt;p&gt;If you would like to display the page number of the current slide you can do so using the &lt;code&gt;slideNumber&lt;/code&gt; configuration value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #776e71&#34;&gt;// Shows the slide number using default formatting&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;slideNumber&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Slide number formatting can be configured using these variables:&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;//  &amp;quot;h.v&amp;quot;: 	horizontal . vertical slide number (default)&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;//  &amp;quot;h/v&amp;quot;: 	horizontal / vertical slide number&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;//    &amp;quot;c&amp;quot;: 	flattened slide number&lt;/span&gt;
&lt;span style=&#34;color: #776e71&#34;&gt;//  &amp;quot;c/t&amp;quot;: 	flattened slide number / total slides&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;slideNumber&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;c/t&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;overview-mode&#34;&gt;Overview mode&lt;/h3&gt;

&lt;p&gt;Press &amp;ldquo;Esc&amp;rdquo; or &amp;ldquo;o&amp;rdquo; keys to toggle the overview mode on and off. While you&amp;rsquo;re in this mode, you can still navigate between slides,
as if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;overviewshown&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;/* ... */&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;overviewhidden&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;/* ... */&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color: #776e71&#34;&gt;// Toggle the overview mode programmatically&lt;/span&gt;
&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;toggleOverview&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;fullscreen-mode&#34;&gt;Fullscreen mode&lt;/h3&gt;

&lt;p&gt;Just press »F« on your keyboard to show your presentation in fullscreen mode. Press the »ESC« key to exit fullscreen mode.&lt;/p&gt;

&lt;h3 id=&#34;embedded-media&#34;&gt;Embedded media&lt;/h3&gt;

&lt;p&gt;Embedded HTML5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; and YouTube iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a &lt;code&gt;data-ignore&lt;/code&gt; attribute.&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;data-autoplay&lt;/code&gt; to your media element if you want it to automatically start playing when the slide is shown:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-autoplay&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Additionally the framework automatically pushes two &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage&#34;&gt;post messages&lt;/a&gt; to all iframes, &lt;code&gt;slide:start&lt;/code&gt; when the slide containing the iframe is made visible and &lt;code&gt;slide:stop&lt;/code&gt; when it is hidden.&lt;/p&gt;

&lt;h3 id=&#34;stretching-elements&#34;&gt;Stretching elements&lt;/h3&gt;

&lt;p&gt;Sometimes it&amp;rsquo;s desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the &lt;code&gt;.stretch&lt;/code&gt; class to an element as seen below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;This video will use up the remaining space on the slide&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;stretch&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Limitations:
- Only direct descendants of a slide section can be stretched
- Only one descendant per slide section can be stretched&lt;/p&gt;

&lt;h3 id=&#34;postmessage-api&#34;&gt;postMessage API&lt;/h3&gt;

&lt;p&gt;The framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here&amp;rsquo;s an example showing how you&amp;rsquo;d make a reveal.js instance in the given window proceed to slide 2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;postMessage&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;JSON&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;stringify&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;slide&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color: #f99b15&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}),&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here&amp;rsquo;s how you subscribe to them from the parent window:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;window.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;addEventListener&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #815ba4&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;JSON&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;parse&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;event&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color: #815ba4&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;reveal&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;eventName&lt;/span&gt; &lt;span style=&#34;color: #5bc4bf&#34;&gt;===&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;slidechanged&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Slide changed, see data.state for slide number&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This cross-window messaging can be toggled on or off using configuration flags.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;...,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Exposes the reveal.js API through window.postMessage&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;postMessage&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Dispatches all reveal.js events to the parent window through postMessage&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;postMessageEvents&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;pdf-export&#34;&gt;PDF Export&lt;/h2&gt;

&lt;p&gt;Presentations can be exported to PDF via a special print stylesheet. This feature requires that you use &lt;a href=&#34;http://google.com/chrome&#34;&gt;Google Chrome&lt;/a&gt; or &lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;Chromium&lt;/a&gt;.
Here&amp;rsquo;s an example of an exported presentation that&amp;rsquo;s been uploaded to SlideShare: &lt;a href=&#34;http://www.slideshare.net/hakimel/revealjs-300&#34;&gt;http://www.slideshare.net/hakimel/revealjs-300&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open your presentation with &lt;code&gt;print-pdf&lt;/code&gt; included anywhere in the query string. This triggers the default index HTML to load the PDF print stylesheet (&lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/print/pdf.css&#34;&gt;css/print/pdf.css&lt;/a&gt;). You can test this with &lt;a href=&#34;http://lab.hakim.se/reveal-js?print-pdf&#34;&gt;lab.hakim.se/reveal-js?print-pdf&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Open the in-browser print dialog (CTRL/CMD+P).&lt;/li&gt;
&lt;li&gt;Change the &lt;strong&gt;Destination&lt;/strong&gt; setting to &lt;strong&gt;Save as PDF&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Change the &lt;strong&gt;Layout&lt;/strong&gt; to &lt;strong&gt;Landscape&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Change the &lt;strong&gt;Margins&lt;/strong&gt; to &lt;strong&gt;None&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Enable the &lt;strong&gt;Background graphics&lt;/strong&gt; option.&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/pdf-print-settings-2.png&#34; alt=&#34;Chrome Print Settings&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alternatively you can use the &lt;a href=&#34;https://github.com/astefanutti/decktape&#34;&gt;decktape&lt;/a&gt; project.&lt;/p&gt;

&lt;h2 id=&#34;theming&#34;&gt;Theming&lt;/h2&gt;

&lt;p&gt;The framework comes with a few different themes included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default theme)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links (default theme for reveal.js &amp;lt; 3.0.0)&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each theme is available as a separate stylesheet. To change theme you will need to replace &lt;strong&gt;black&lt;/strong&gt; below with your desired theme name in index.html:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;css/theme/black.css&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;theme&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to add a theme of your own see the instructions here: &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/README.md&#34;&gt;/css/theme/README.md&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;

&lt;p&gt;reveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven&amp;rsquo;t written any notes. Press the &amp;rsquo;s&amp;rsquo; key on your keyboard to open the notes window.&lt;/p&gt;

&lt;p&gt;Notes are defined by appending an &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; element to a slide as seen below. You can add the &lt;code&gt;data-markdown&lt;/code&gt; attribute to the aside element if you prefer writing notes using Markdown.&lt;/p&gt;

&lt;p&gt;Alternatively you can add your notes in a &lt;code&gt;data-notes&lt;/code&gt; attribute on the slide. Like &lt;code&gt;&amp;lt;section data-notes=&amp;quot;Something important&amp;quot;&amp;gt;&amp;lt;/section&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When used locally, this feature requires that reveal.js &lt;a href=&#34;#full-setup&#34;&gt;runs from a local web server&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;Some Slide&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;aside&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;notes&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
		Oh hey, these are some notes. They&amp;#39;ll be hidden in your presentation, but you can see them if you open the speaker notes window (hit &amp;#39;s&amp;#39; on your keyboard).
	&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;aside&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you&amp;rsquo;re using the external Markdown plugin, you can add notes with the help of a special delimiter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-markdown&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;example.md&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^\n\n\n&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator-vertical&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^\n\n&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;data-separator-notes&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #48b685&#34;&gt;&amp;quot;^Note:&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;section&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;&amp;gt;&lt;/span&gt;

# Title
## Sub-title

Here is some content...

Note:
This will only display in the notes window.
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;share-and-print-speaker-notes&#34;&gt;Share and Print Speaker Notes&lt;/h4&gt;

&lt;p&gt;Notes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the &lt;code&gt;showNotes&lt;/code&gt; config value set to &lt;code&gt;true&lt;/code&gt;. Notes will appear along the bottom of the presentations.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;showNotes&lt;/code&gt; is enabled notes are also included when you &lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;export to PDF&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;server-side-speaker-notes&#34;&gt;Server Side Speaker Notes&lt;/h2&gt;

&lt;p&gt;In some cases it can be desirable to run notes on a separate device from the one you&amp;rsquo;re presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;socket.io/socket.io.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/notes-server/client.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (1.0.0 or later)&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;node plugin/notes-server&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;multiplexing&#34;&gt;Multiplexing&lt;/h2&gt;

&lt;p&gt;The multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The multiplex plugin needs the following 3 things to operate:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Master presentation that has control&lt;/li&gt;
&lt;li&gt;Client presentations that follow the master&lt;/li&gt;
&lt;li&gt;Socket.io server to broadcast events from the master to the clients&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;More details:&lt;/p&gt;

&lt;h4 id=&#34;master-presentation&#34;&gt;Master presentation&lt;/h4&gt;

&lt;p&gt;Served from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter&amp;rsquo;s) computer. (It&amp;rsquo;s safer to run the master presentation from your own computer, so if the venue&amp;rsquo;s Internet goes down it doesn&amp;rsquo;t stop the show.) An example would be to execute the following commands in the directory of your master presentation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;npm install node-static&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;static&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute &lt;code&gt;node plugin/notes-server&lt;/code&gt; in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes/static-file server.&lt;/p&gt;

&lt;p&gt;You can then access your master presentation at &lt;code&gt;http://localhost:1947&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Example configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// other options...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;multiplex&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Example values. To generate your own, see the socket.io server instructions.&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;13652805320794272084&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Obtained from the socket.io server. Gives this (the master) control of the presentation&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;1ea875674b17ca76&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Obtained from socket.io server&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;https://reveal-js-multiplex-ccjbegmaii.now.sh&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Location of socket.io server&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Don&amp;#39;t forget to add the dependencies&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;//cdn.socket.io/socket.io-1.3.5.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/multiplex/master.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// and if you want speaker notes&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/notes-server/client.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// other dependencies...&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;client-presentation&#34;&gt;Client presentation&lt;/h4&gt;

&lt;p&gt;Served from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via &lt;code&gt;http://example.com/path/to/presentation/client/index.html&lt;/code&gt;, with the configuration below causing them to connect to the socket.io server as clients.&lt;/p&gt;

&lt;p&gt;Example configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// other options...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;multiplex&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Example values. To generate your own, see the socket.io server instructions.&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// null so the clients do not have control of the master presentation&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;1ea875674b17ca76&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// id, obtained from socket.io server&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;https://reveal-js-multiplex-ccjbegmaii.now.sh&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Location of socket.io server&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Don&amp;#39;t forget to add the dependencies&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;//cdn.socket.io/socket.io-1.3.5.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/multiplex/client.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// other dependencies...&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;socket-io-server&#34;&gt;Socket.io server&lt;/h4&gt;

&lt;p&gt;Server that receives the slideChanged events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;node plugin/multiplex&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Or you use the socket.io server at &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need to generate a unique secret and token pair for your master and client presentations. To do so, visit &lt;code&gt;http://example.com/token&lt;/code&gt;, where &lt;code&gt;http://example.com&lt;/code&gt; is the location of your socket.io server. Or if you&amp;rsquo;re going to use the socket.io server at &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt;, visit &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/token&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/token&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You are very welcome to point your presentations at the Socket.io server running at &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt;, but availability and stability are not guaranteed. For anything mission critical I recommend you run your own server. It is simple to deploy to nodejitsu, heroku, your own environment, etc.&lt;/p&gt;

&lt;h5 id=&#34;socket-io-server-as-file-static-server&#34;&gt;socket.io server as file static server&lt;/h5&gt;

&lt;p&gt;The socket.io server can play the role of static file server for your client presentation, as in the example at &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt;. (Open &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt; in two browsers. Navigate through the slides on one, and the other will update to match.)&lt;/p&gt;

&lt;p&gt;Example configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// other options...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;multiplex&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Example values. To generate your own, see the socket.io server instructions.&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// null so the clients do not have control of the master presentation&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;1ea875674b17ca76&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// id, obtained from socket.io server&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;example.com:80&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Location of your socket.io server&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Don&amp;#39;t forget to add the dependencies&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;//cdn.socket.io/socket.io-1.3.5.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/multiplex/client.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// other dependencies...&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don&amp;rsquo;t want to use speaker notes). (Open &lt;a href=&#34;https://reveal-js-multiplex-ccjbegmaii.now.sh/&#34;&gt;https://reveal-js-multiplex-ccjbegmaii.now.sh/&lt;/a&gt; in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don&amp;rsquo;t want your audience to mess with your slides while you&amp;rsquo;re presenting. ;)&lt;/p&gt;

&lt;p&gt;Example configuration:&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;
	&lt;span style=&#34;color: #776e71&#34;&gt;// other options...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;multiplex&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #776e71&#34;&gt;// Example values. To generate your own, see the socket.io server instructions.&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;secret&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;13652805320794272084&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Obtained from the socket.io server. Gives this (the master) control of the presentation&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;1ea875674b17ca76&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Obtained from socket.io server&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;url&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;example.com:80&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #776e71&#34;&gt;// Location of your socket.io server&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// Don&amp;#39;t forget to add the dependencies&lt;/span&gt;
	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;//cdn.socket.io/socket.io-1.3.5.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/multiplex/master.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/multiplex/client.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;

		&lt;span style=&#34;color: #776e71&#34;&gt;// other dependencies...&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&#34;mathjax&#34;&gt;MathJax&lt;/h2&gt;

&lt;p&gt;If you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the &lt;a href=&#34;http://www.mathjax.org/&#34;&gt;MathJax&lt;/a&gt; library. To use it you&amp;rsquo;ll need to include it as a reveal.js dependency, &lt;a href=&#34;#dependencies&#34;&gt;find our more about dependencies here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The plugin defaults to using &lt;a href=&#34;http://en.wikipedia.org/wiki/LaTeX&#34;&gt;LaTeX&lt;/a&gt; but that can be adjusted through the &lt;code&gt;math&lt;/code&gt; configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you&amp;rsquo;ll need to download a copy of the library and adjust the &lt;code&gt;mathjax&lt;/code&gt; configuration value.&lt;/p&gt;

&lt;p&gt;Below is an example of how the plugin can be configured. If you don&amp;rsquo;t intend to change these values you do not need to include the &lt;code&gt;math&lt;/code&gt; config object at all.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;Reveal&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #06b6ef&#34;&gt;initialize&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;({&lt;/span&gt;

	&lt;span style=&#34;color: #776e71&#34;&gt;// other options ...&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;math&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;mathjax&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;https://cdn.mathjax.org/mathjax/latest/MathJax.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt;
		&lt;span style=&#34;color: #06b6ef&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;TeX-AMS_HTML-full&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color: #776e71&#34;&gt;// See http://docs.mathjax.org/en/latest/config-files.html&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;},&lt;/span&gt;

	&lt;span style=&#34;color: #06b6ef&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;[&lt;/span&gt;
		&lt;span style=&#34;color: #e7e9db&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #48b685&#34;&gt;&amp;#39;plugin/math/math.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #e7e9db&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #06b6ef&#34;&gt;async&lt;/span&gt;&lt;span style=&#34;color: #5bc4bf&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color: #815ba4&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color: #e7e9db&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #e7e9db&#34;&gt;]&lt;/span&gt;

&lt;span style=&#34;color: #e7e9db&#34;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Read MathJax&amp;rsquo;s documentation if you need &lt;a href=&#34;http://docs.mathjax.org/en/latest/start.html#secure-access-to-the-cdn&#34;&gt;HTTPS delivery&lt;/a&gt; or serving of &lt;a href=&#34;http://docs.mathjax.org/en/latest/configuration.html#loading-mathjax-from-the-cdn&#34;&gt;specific versions&lt;/a&gt; for stability.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;basic setup&lt;/strong&gt; is for authoring presentations only. The &lt;strong&gt;full setup&lt;/strong&gt; gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.&lt;/p&gt;

&lt;h3 id=&#34;basic-setup&#34;&gt;Basic setup&lt;/h3&gt;

&lt;p&gt;The core of reveal.js is very easy to install. You&amp;rsquo;ll simply need to download a copy of this repository and open the index.html file directly in your browser.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download the latest version of reveal.js from &lt;a href=&#34;https://github.com/hakimel/reveal.js/releases&#34;&gt;https://github.com/hakimel/reveal.js/releases&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Unzip and replace the example contents in index.html with your own&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open index.html in a browser to view it&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;full-setup&#34;&gt;Full setup&lt;/h3&gt;

&lt;p&gt;Some reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href=&#34;http://nodejs.org/&#34;&gt;Node.js&lt;/a&gt; (1.0.0 or later)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clone the reveal.js repository&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/hakimel/reveal.js.git
&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Navigate to the reveal.js folder&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span style=&#34;color: #e7e9db&#34;&gt;cd&lt;/span&gt; reveal.js
&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install dependencies&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ npm install
&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Serve the presentation and monitor source files for changes&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #2f1e2e&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;$ npm start
&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; to view your presentation&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can change the port by using &lt;code&gt;npm start -- --port 8001&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;folder-structure&#34;&gt;Folder Structure&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;css/&lt;/strong&gt; Core styles without which the project does not function&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;js/&lt;/strong&gt; Like above but for JavaScript&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;plugin/&lt;/strong&gt; Components that have been developed as extensions to reveal.js&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lib/&lt;/strong&gt; All other third party assets (JavaScript, CSS, fonts)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;MIT licensed&lt;/p&gt;

&lt;p&gt;Copyright &amp;copy; 2016 Hakim El Hattab, &lt;a href=&#34;http://hakim.se&#34;&gt;http://hakim.se&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/css/theme/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/css/theme/README/</guid>
      <description>

&lt;h2 id=&#34;dependencies&#34;&gt;Dependencies&lt;/h2&gt;

&lt;p&gt;Themes are written using Sass to keep things modular and reduce the need for repeated selectors across files. Make sure that you have the reveal.js development environment including the Grunt dependencies installed before proceding: &lt;a href=&#34;https://github.com/hakimel/reveal.js#full-setup&#34;&gt;https://github.com/hakimel/reveal.js#full-setup&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;creating-a-theme&#34;&gt;Creating a Theme&lt;/h2&gt;

&lt;p&gt;To create your own theme, start by duplicating a &lt;code&gt;.scss&lt;/code&gt; file in &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/source&#34;&gt;/css/theme/source&lt;/a&gt;. It will be automatically compiled by Grunt from Sass to CSS (see the &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/Gruntfile.js&#34;&gt;Gruntfile&lt;/a&gt;) when you run &lt;code&gt;grunt css-themes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Each theme file does four things in the following order:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Include &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/mixins.scss&#34;&gt;/css/theme/template/mixins.scss&lt;/a&gt;&lt;/strong&gt;
Shared utility functions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Include &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&#34;&gt;/css/theme/template/settings.scss&lt;/a&gt;&lt;/strong&gt;
Declares a set of custom variables that the template file (step 4) expects. Can be overridden in step 3.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Override&lt;/strong&gt;
This is where you override the default theme. Either by specifying variables (see &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/settings.scss&#34;&gt;settings.scss&lt;/a&gt; for reference) or by adding any selectors and styles you please.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Include &lt;a href=&#34;https://github.com/hakimel/reveal.js/blob/master/css/theme/template/theme.scss&#34;&gt;/css/theme/template/theme.scss&lt;/a&gt;&lt;/strong&gt;
The template theme file which will generate final CSS output based on the currently defined variables.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/demo/</guid>
      <description>&lt;!doctype html&gt;
&lt;html lang=&#34;en&#34;&gt;

	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js – The HTML Presentation Framework&lt;/title&gt;

		&lt;meta name=&#34;description&#34; content=&#34;A framework for easily creating beautiful presentations using HTML&#34;&gt;
		&lt;meta name=&#34;author&#34; content=&#34;Hakim El Hattab&#34;&gt;

		&lt;meta name=&#34;apple-mobile-web-app-capable&#34; content=&#34;yes&#34;&gt;
		&lt;meta name=&#34;apple-mobile-web-app-status-bar-style&#34; content=&#34;black-translucent&#34;&gt;

		&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&#34;&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/reveal.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/theme/black.css&#34; id=&#34;theme&#34;&gt;

		&lt;!-- Theme used for syntax highlighting of code --&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;lib/css/zenburn.css&#34;&gt;

		&lt;!-- Printing and PDF exports --&gt;
		&lt;script&gt;
			var link = document.createElement( &#39;link&#39; );
			link.rel = &#39;stylesheet&#39;;
			link.type = &#39;text/css&#39;;
			link.href = window.location.search.match( /print-pdf/gi ) ? &#39;css/print/pdf.css&#39; : &#39;css/print/paper.css&#39;;
			document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link );
		&lt;/script&gt;

		&lt;!--[if lt IE 9]&gt;
		&lt;script src=&#34;lib/js/html5shiv.js&#34;&gt;&lt;/script&gt;
		&lt;![endif]--&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div class=&#34;reveal&#34;&gt;

			&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
			&lt;div class=&#34;slides&#34;&gt;
				&lt;section&gt;
					&lt;h1&gt;Reveal.js&lt;/h1&gt;
					&lt;h3&gt;The HTML Presentation Framework&lt;/h3&gt;
					&lt;p&gt;
						&lt;small&gt;Created by &lt;a href=&#34;http://hakim.se&#34;&gt;Hakim El Hattab&lt;/a&gt; / &lt;a href=&#34;http://twitter.com/hakimel&#34;&gt;@hakimel&lt;/a&gt;&lt;/small&gt;
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Hello There&lt;/h2&gt;
					&lt;p&gt;
						reveal.js enables you to create beautiful interactive slide decks using HTML. This presentation will show you examples of what it can do.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;!-- Example of nested vertical slides --&gt;
				&lt;section&gt;
					&lt;section&gt;
						&lt;h2&gt;Vertical Slides&lt;/h2&gt;
						&lt;p&gt;Slides can be nested inside of each other.&lt;/p&gt;
						&lt;p&gt;Use the &lt;em&gt;Space&lt;/em&gt; key to navigate through all slides.&lt;/p&gt;
						&lt;br&gt;
						&lt;a href=&#34;#&#34; class=&#34;navigate-down&#34;&gt;
							&lt;img width=&#34;178&#34; height=&#34;238&#34; data-src=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png&#34; alt=&#34;Down arrow&#34;&gt;
						&lt;/a&gt;
					&lt;/section&gt;
					&lt;section&gt;
						&lt;h2&gt;Basement Level 1&lt;/h2&gt;
						&lt;p&gt;Nested slides are useful for adding additional detail underneath a high level horizontal slide.&lt;/p&gt;
					&lt;/section&gt;
					&lt;section&gt;
						&lt;h2&gt;Basement Level 2&lt;/h2&gt;
						&lt;p&gt;That&#39;s it, time to go back up.&lt;/p&gt;
						&lt;br&gt;
						&lt;a href=&#34;#/2&#34;&gt;
							&lt;img width=&#34;178&#34; height=&#34;238&#34; data-src=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png&#34; alt=&#34;Up arrow&#34; style=&#34;transform: rotate(180deg); -webkit-transform: rotate(180deg);&#34;&gt;
						&lt;/a&gt;
					&lt;/section&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Slides&lt;/h2&gt;
					&lt;p&gt;
						Not a coder? Not a problem. There&#39;s a fully-featured visual editor for authoring these, try it out at &lt;a href=&#34;http://slides.com&#34; target=&#34;_blank&#34;&gt;http://slides.com&lt;/a&gt;.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Point of View&lt;/h2&gt;
					&lt;p&gt;
						Press &lt;strong&gt;ESC&lt;/strong&gt; to enter the slide overview.
					&lt;/p&gt;
					&lt;p&gt;
						Hold down alt and click on any element to zoom in on it using &lt;a href=&#34;http://lab.hakim.se/zoom-js&#34;&gt;zoom.js&lt;/a&gt;. Alt + click anywhere to zoom back out.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Touch Optimized&lt;/h2&gt;
					&lt;p&gt;
						Presentations look great on touch devices, like mobile phones and tablets. Simply swipe through your slides.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section data-markdown&gt;
					&lt;script type=&#34;text/template&#34;&gt;
						## Markdown support

						Write content using inline or external Markdown.
						Instructions and more info available in the [readme](https://github.com/hakimel/reveal.js#markdown).

						```
						&lt;section data-markdown&gt;
						  ## Markdown support

						  Write content using inline or external Markdown.
						  Instructions and more info available in the [readme](https://github.com/hakimel/reveal.js#markdown).
						&lt;/section&gt;
						```
					&lt;/script&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;section id=&#34;fragments&#34;&gt;
						&lt;h2&gt;Fragments&lt;/h2&gt;
						&lt;p&gt;Hit the next arrow...&lt;/p&gt;
						&lt;p class=&#34;fragment&#34;&gt;... to step through ...&lt;/p&gt;
						&lt;p&gt;&lt;span class=&#34;fragment&#34;&gt;... a&lt;/span&gt; &lt;span class=&#34;fragment&#34;&gt;fragmented&lt;/span&gt; &lt;span class=&#34;fragment&#34;&gt;slide.&lt;/span&gt;&lt;/p&gt;

						&lt;aside class=&#34;notes&#34;&gt;
							This slide has fragments which are also stepped through in the notes window.
						&lt;/aside&gt;
					&lt;/section&gt;
					&lt;section&gt;
						&lt;h2&gt;Fragment Styles&lt;/h2&gt;
						&lt;p&gt;There&#39;s different types of fragments, like:&lt;/p&gt;
						&lt;p class=&#34;fragment grow&#34;&gt;grow&lt;/p&gt;
						&lt;p class=&#34;fragment shrink&#34;&gt;shrink&lt;/p&gt;
						&lt;p class=&#34;fragment fade-out&#34;&gt;fade-out&lt;/p&gt;
						&lt;p class=&#34;fragment fade-up&#34;&gt;fade-up (also down, left and right!)&lt;/p&gt;
						&lt;p class=&#34;fragment current-visible&#34;&gt;current-visible&lt;/p&gt;
						&lt;p&gt;Highlight &lt;span class=&#34;fragment highlight-red&#34;&gt;red&lt;/span&gt; &lt;span class=&#34;fragment highlight-blue&#34;&gt;blue&lt;/span&gt; &lt;span class=&#34;fragment highlight-green&#34;&gt;green&lt;/span&gt;&lt;/p&gt;
					&lt;/section&gt;
				&lt;/section&gt;

				&lt;section id=&#34;transitions&#34;&gt;
					&lt;h2&gt;Transition Styles&lt;/h2&gt;
					&lt;p&gt;
						You can select from different transitions, like: &lt;br&gt;
						&lt;a href=&#34;?transition=none#/transitions&#34;&gt;None&lt;/a&gt; -
						&lt;a href=&#34;?transition=fade#/transitions&#34;&gt;Fade&lt;/a&gt; -
						&lt;a href=&#34;?transition=slide#/transitions&#34;&gt;Slide&lt;/a&gt; -
						&lt;a href=&#34;?transition=convex#/transitions&#34;&gt;Convex&lt;/a&gt; -
						&lt;a href=&#34;?transition=concave#/transitions&#34;&gt;Concave&lt;/a&gt; -
						&lt;a href=&#34;?transition=zoom#/transitions&#34;&gt;Zoom&lt;/a&gt;
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section id=&#34;themes&#34;&gt;
					&lt;h2&gt;Themes&lt;/h2&gt;
					&lt;p&gt;
						reveal.js comes with a few themes built in: &lt;br&gt;
						&lt;!-- Hacks to swap themes after the page has loaded. Not flexible and only intended for the reveal.js demo deck. --&gt;
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/black.css&#39;); return false;&#34;&gt;Black (default)&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/white.css&#39;); return false;&#34;&gt;White&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/league.css&#39;); return false;&#34;&gt;League&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/sky.css&#39;); return false;&#34;&gt;Sky&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/beige.css&#39;); return false;&#34;&gt;Beige&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/simple.css&#39;); return false;&#34;&gt;Simple&lt;/a&gt; &lt;br&gt;
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/serif.css&#39;); return false;&#34;&gt;Serif&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/blood.css&#39;); return false;&#34;&gt;Blood&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/night.css&#39;); return false;&#34;&gt;Night&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/moon.css&#39;); return false;&#34;&gt;Moon&lt;/a&gt; -
						&lt;a href=&#34;#&#34; onclick=&#34;document.getElementById(&#39;theme&#39;).setAttribute(&#39;href&#39;,&#39;css/theme/solarized.css&#39;); return false;&#34;&gt;Solarized&lt;/a&gt;
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;section data-background=&#34;#dddddd&#34;&gt;
						&lt;h2&gt;Slide Backgrounds&lt;/h2&gt;
						&lt;p&gt;
							Set &lt;code&gt;data-background=&#34;#dddddd&#34;&lt;/code&gt; on a slide to change the background color. All CSS color formats are supported.
						&lt;/p&gt;
						&lt;a href=&#34;#&#34; class=&#34;navigate-down&#34;&gt;
							&lt;img width=&#34;178&#34; height=&#34;238&#34; data-src=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/arrow.png&#34; alt=&#34;Down arrow&#34;&gt;
						&lt;/a&gt;
					&lt;/section&gt;
					&lt;section data-background=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/image-placeholder.png&#34;&gt;
						&lt;h2&gt;Image Backgrounds&lt;/h2&gt;
						&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;&amp;lt;section data-background=&#34;image.png&#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
					&lt;/section&gt;
					&lt;section data-background=&#34;https://s3.amazonaws.com/hakim-static/reveal-js/image-placeholder.png&#34; data-background-repeat=&#34;repeat&#34; data-background-size=&#34;100px&#34;&gt;
						&lt;h2&gt;Tiled Backgrounds&lt;/h2&gt;
						&lt;pre&gt;&lt;code class=&#34;hljs&#34; style=&#34;word-wrap: break-word;&#34;&gt;&amp;lt;section data-background=&#34;image.png&#34; data-background-repeat=&#34;repeat&#34; data-background-size=&#34;100px&#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
					&lt;/section&gt;
					&lt;section data-background-video=&#34;https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.mp4,https://s3.amazonaws.com/static.slid.es/site/homepage/v1/homepage-video-editor.webm&#34; data-background-color=&#34;#000000&#34;&gt;
						&lt;div style=&#34;background-color: rgba(0, 0, 0, 0.9); color: #fff; padding: 20px;&#34;&gt;
							&lt;h2&gt;Video Backgrounds&lt;/h2&gt;
							&lt;pre&gt;&lt;code class=&#34;hljs&#34; style=&#34;word-wrap: break-word;&#34;&gt;&amp;lt;section data-background-video=&#34;video.mp4,video.webm&#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
						&lt;/div&gt;
					&lt;/section&gt;
					&lt;section data-background=&#34;http://i.giphy.com/90F8aUepslB84.gif&#34;&gt;
						&lt;h2&gt;... and GIFs!&lt;/h2&gt;
					&lt;/section&gt;
				&lt;/section&gt;

				&lt;section data-transition=&#34;slide&#34; data-background=&#34;#4d7e65&#34; data-background-transition=&#34;zoom&#34;&gt;
					&lt;h2&gt;Background Transitions&lt;/h2&gt;
					&lt;p&gt;
						Different background transitions are available via the backgroundTransition option. This one&#39;s called &#34;zoom&#34;.
					&lt;/p&gt;
					&lt;pre&gt;&lt;code class=&#34;hljs&#34;&gt;Reveal.configure({ backgroundTransition: &#39;zoom&#39; })&lt;/code&gt;&lt;/pre&gt;
				&lt;/section&gt;

				&lt;section data-transition=&#34;slide&#34; data-background=&#34;#b5533c&#34; data-background-transition=&#34;zoom&#34;&gt;
					&lt;h2&gt;Background Transitions&lt;/h2&gt;
					&lt;p&gt;
						You can override background transitions per-slide.
					&lt;/p&gt;
					&lt;pre&gt;&lt;code class=&#34;hljs&#34; style=&#34;word-wrap: break-word;&#34;&gt;&amp;lt;section data-background-transition=&#34;zoom&#34;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Pretty Code&lt;/h2&gt;
					&lt;pre&gt;&lt;code class=&#34;hljs&#34; data-trim contenteditable&gt;
function linkify( selector ) {
  if( supports3DTransforms ) {

    var nodes = document.querySelectorAll( selector );

    for( var i = 0, len = nodes.length; i &amp;lt; len; i++ ) {
      var node = nodes[i];

      if( !node.className ) {
        node.className += &#39; roll&#39;;
      }
    }
  }
}
					&lt;/code&gt;&lt;/pre&gt;
					&lt;p&gt;Code syntax highlighting courtesy of &lt;a href=&#34;http://softwaremaniacs.org/soft/highlight/en/description/&#34;&gt;highlight.js&lt;/a&gt;.&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Marvelous List&lt;/h2&gt;
					&lt;ul&gt;
						&lt;li&gt;No order here&lt;/li&gt;
						&lt;li&gt;Or here&lt;/li&gt;
						&lt;li&gt;Or here&lt;/li&gt;
						&lt;li&gt;Or here&lt;/li&gt;
					&lt;/ul&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Fantastic Ordered List&lt;/h2&gt;
					&lt;ol&gt;
						&lt;li&gt;One is smaller than...&lt;/li&gt;
						&lt;li&gt;Two is smaller than...&lt;/li&gt;
						&lt;li&gt;Three!&lt;/li&gt;
					&lt;/ol&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Tabular Tables&lt;/h2&gt;
					&lt;table&gt;
						&lt;thead&gt;
							&lt;tr&gt;
								&lt;th&gt;Item&lt;/th&gt;
								&lt;th&gt;Value&lt;/th&gt;
								&lt;th&gt;Quantity&lt;/th&gt;
							&lt;/tr&gt;
						&lt;/thead&gt;
						&lt;tbody&gt;
							&lt;tr&gt;
								&lt;td&gt;Apples&lt;/td&gt;
								&lt;td&gt;$1&lt;/td&gt;
								&lt;td&gt;7&lt;/td&gt;
							&lt;/tr&gt;
							&lt;tr&gt;
								&lt;td&gt;Lemonade&lt;/td&gt;
								&lt;td&gt;$2&lt;/td&gt;
								&lt;td&gt;18&lt;/td&gt;
							&lt;/tr&gt;
							&lt;tr&gt;
								&lt;td&gt;Bread&lt;/td&gt;
								&lt;td&gt;$3&lt;/td&gt;
								&lt;td&gt;2&lt;/td&gt;
							&lt;/tr&gt;
						&lt;/tbody&gt;
					&lt;/table&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Clever Quotes&lt;/h2&gt;
					&lt;p&gt;
						These guys come in two forms, inline: &lt;q cite=&#34;http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations&#34;&gt;
						&amp;ldquo;The nice thing about standards is that there are so many to choose from&amp;rdquo;&lt;/q&gt; and block:
					&lt;/p&gt;
					&lt;blockquote cite=&#34;http://searchservervirtualization.techtarget.com/definition/Our-Favorite-Technology-Quotations&#34;&gt;
						&amp;ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would
						reproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.&amp;rdquo;
					&lt;/blockquote&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Intergalactic Interconnections&lt;/h2&gt;
					&lt;p&gt;
						You can link between slides internally,
						&lt;a href=&#34;#/2/3&#34;&gt;like this&lt;/a&gt;.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Speaker View&lt;/h2&gt;
					&lt;p&gt;There&#39;s a &lt;a href=&#34;https://github.com/hakimel/reveal.js#speaker-notes&#34;&gt;speaker view&lt;/a&gt;. It includes a timer, preview of the upcoming slide as well as your speaker notes.&lt;/p&gt;
					&lt;p&gt;Press the &lt;em&gt;S&lt;/em&gt; key to try it out.&lt;/p&gt;

					&lt;aside class=&#34;notes&#34;&gt;
						Oh hey, these are some notes. They&#39;ll be hidden in your presentation, but you can see them if you open the speaker notes window (hit &#39;s&#39; on your keyboard).
					&lt;/aside&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Export to PDF&lt;/h2&gt;
					&lt;p&gt;Presentations can be &lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34;&gt;exported to PDF&lt;/a&gt;, here&#39;s an example:&lt;/p&gt;
					&lt;iframe data-src=&#34;https://www.slideshare.net/slideshow/embed_code/42840540&#34; width=&#34;445&#34; height=&#34;355&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:3px solid #666; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Global State&lt;/h2&gt;
					&lt;p&gt;
						Set &lt;code&gt;data-state=&#34;something&#34;&lt;/code&gt; on a slide and &lt;code&gt;&#34;something&#34;&lt;/code&gt;
						will be added as a class to the document element when the slide is open. This lets you
						apply broader style changes, like switching the page background.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section data-state=&#34;customevent&#34;&gt;
					&lt;h2&gt;State Events&lt;/h2&gt;
					&lt;p&gt;
						Additionally custom events can be triggered on a per slide basis by binding to the &lt;code&gt;data-state&lt;/code&gt; name.
					&lt;/p&gt;
					&lt;pre&gt;&lt;code class=&#34;javascript&#34; data-trim contenteditable style=&#34;font-size: 18px;&#34;&gt;
Reveal.addEventListener( &#39;customevent&#39;, function() {
	console.log( &#39;&#34;customevent&#34; has fired&#39; );
} );
					&lt;/code&gt;&lt;/pre&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Take a Moment&lt;/h2&gt;
					&lt;p&gt;
						Press B or . on your keyboard to pause the presentation. This is helpful when you&#39;re on stage and want to take distracting slides off the screen.
					&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Much more&lt;/h2&gt;
					&lt;ul&gt;
						&lt;li&gt;Right-to-left support&lt;/li&gt;
						&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#api&#34;&gt;Extensive JavaScript API&lt;/a&gt;&lt;/li&gt;
						&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#auto-sliding&#34;&gt;Auto-progression&lt;/a&gt;&lt;/li&gt;
						&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#parallax-background&#34;&gt;Parallax backgrounds&lt;/a&gt;&lt;/li&gt;
						&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#keyboard-bindings&#34;&gt;Custom keyboard bindings&lt;/a&gt;&lt;/li&gt;
					&lt;/ul&gt;
				&lt;/section&gt;

				&lt;section style=&#34;text-align: left;&#34;&gt;
					&lt;h1&gt;THE END&lt;/h1&gt;
					&lt;p&gt;
						- &lt;a href=&#34;http://slides.com&#34;&gt;Try the online editor&lt;/a&gt; &lt;br&gt;
						- &lt;a href=&#34;https://github.com/hakimel/reveal.js&#34;&gt;Source code &amp;amp; documentation&lt;/a&gt;
					&lt;/p&gt;
				&lt;/section&gt;

			&lt;/div&gt;

		&lt;/div&gt;

		&lt;script src=&#34;lib/js/head.min.js&#34;&gt;&lt;/script&gt;
		&lt;script src=&#34;js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;

			// More info https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				transition: &#39;slide&#39;, // none/fade/slide/convex/concave/zoom

				// More info https://github.com/hakimel/reveal.js#dependencies
				dependencies: [
					{ src: &#39;lib/js/classList.js&#39;, condition: function() { return !document.body.classList; } },
					{ src: &#39;plugin/markdown/marked.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } },
					{ src: &#39;plugin/markdown/markdown.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } },
					{ src: &#39;plugin/highlight/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: &#39;plugin/zoom-js/zoom.js&#39;, async: true },
					{ src: &#39;plugin/notes/notes.js&#39;, async: true }
				]
			});

		&lt;/script&gt;

	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/</guid>
      <description>&lt;!doctype html&gt;
&lt;html&gt;
	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;
		&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&#34;&gt;

		&lt;title&gt;reveal.js&lt;/title&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/reveal.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;css/theme/black.css&#34;&gt;

		&lt;!-- Theme used for syntax highlighting of code --&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;lib/css/zenburn.css&#34;&gt;

		&lt;!-- Printing and PDF exports --&gt;
		&lt;script&gt;
			var link = document.createElement( &#39;link&#39; );
			link.rel = &#39;stylesheet&#39;;
			link.type = &#39;text/css&#39;;
			link.href = window.location.search.match( /print-pdf/gi ) ? &#39;css/print/pdf.css&#39; : &#39;css/print/paper.css&#39;;
			document.getElementsByTagName( &#39;head&#39; )[0].appendChild( link );
		&lt;/script&gt;
	&lt;/head&gt;
	&lt;body&gt;
		&lt;div class=&#34;reveal&#34;&gt;
			&lt;div class=&#34;slides&#34;&gt;
				&lt;section&gt;Slide 1&lt;/section&gt;
				&lt;section&gt;Slide 2&lt;/section&gt;
			&lt;/div&gt;
		&lt;/div&gt;

		&lt;script src=&#34;lib/js/head.min.js&#34;&gt;&lt;/script&gt;
		&lt;script src=&#34;js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
			// More info https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				history: true,

				// More info https://github.com/hakimel/reveal.js#dependencies
				dependencies: [
					{ src: &#39;plugin/markdown/marked.js&#39; },
					{ src: &#39;plugin/markdown/markdown.js&#39; },
					{ src: &#39;plugin/notes/notes.js&#39;, async: true },
					{ src: &#39;plugin/highlight/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
				]
			});
		&lt;/script&gt;
	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/plugin/markdown/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/plugin/markdown/example/</guid>
      <description>&lt;!doctype html&gt;
&lt;html lang=&#34;en&#34;&gt;

	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Markdown Demo&lt;/title&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;../../css/reveal.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;../../css/theme/white.css&#34; id=&#34;theme&#34;&gt;

        &lt;link rel=&#34;stylesheet&#34; href=&#34;../../lib/css/zenburn.css&#34;&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div class=&#34;reveal&#34;&gt;

			&lt;div class=&#34;slides&#34;&gt;

                &lt;!-- Use external markdown resource, separate slides by three newlines; vertical slides by two newlines --&gt;
                &lt;section data-markdown=&#34;example.md&#34; data-separator=&#34;^\n\n\n&#34; data-separator-vertical=&#34;^\n\n&#34;&gt;&lt;/section&gt;

                &lt;!-- Slides are separated by three dashes (quick &#39;n dirty regular expression) --&gt;
                &lt;section data-markdown data-separator=&#34;---&#34;&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        ## Demo 1
                        Slide 1
                        ---
                        ## Demo 1
                        Slide 2
                        ---
                        ## Demo 1
                        Slide 3
                    &lt;/script&gt;
                &lt;/section&gt;

                &lt;!-- Slides are separated by newline + three dashes + newline, vertical slides identical but two dashes --&gt;
                &lt;section data-markdown data-separator=&#34;^\n---\n$&#34; data-separator-vertical=&#34;^\n--\n$&#34;&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        ## Demo 2
                        Slide 1.1

                        --

                        ## Demo 2
                        Slide 1.2

                        ---

                        ## Demo 2
                        Slide 2
                    &lt;/script&gt;
                &lt;/section&gt;

                &lt;!-- No &#34;extra&#34; slides, since there are no separators defined (so they&#39;ll become horizontal rulers) --&gt;
                &lt;section data-markdown&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        A

                        ---

                        B

                        ---

                        C
                    &lt;/script&gt;
                &lt;/section&gt;

                &lt;!-- Slide attributes --&gt;
                &lt;section data-markdown&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        &lt;!-- .slide: data-background=&#34;#000000&#34; --&gt;
                        ## Slide attributes
                    &lt;/script&gt;
                &lt;/section&gt;

                &lt;!-- Element attributes --&gt;
                &lt;section data-markdown&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        ## Element attributes
                        - Item 1 &lt;!-- .element: class=&#34;fragment&#34; data-fragment-index=&#34;2&#34; --&gt;
                        - Item 2 &lt;!-- .element: class=&#34;fragment&#34; data-fragment-index=&#34;1&#34; --&gt;
                    &lt;/script&gt;
                &lt;/section&gt;

                &lt;!-- Code --&gt;
                &lt;section data-markdown&gt;
                    &lt;script type=&#34;text/template&#34;&gt;
                        ```php
                        public function foo()
                        {
                            $foo = array(
                                &#39;bar&#39; =&gt; &#39;bar&#39;
                            )
                        }
                        ```
                    &lt;/script&gt;
                &lt;/section&gt;

            &lt;/div&gt;
		&lt;/div&gt;

		&lt;script src=&#34;../../lib/js/head.min.js&#34;&gt;&lt;/script&gt;
		&lt;script src=&#34;../../js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;

			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: &#39;../../lib/js/classList.js&#39;, condition: function() { return !document.body.classList; } },
					{ src: &#39;marked.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } },
                    { src: &#39;markdown.js&#39;, condition: function() { return !!document.querySelector( &#39;[data-markdown]&#39; ); } },
                    { src: &#39;../highlight/highlight.js&#39;, async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: &#39;../notes/notes.js&#39; }
				]
			});

		&lt;/script&gt;

	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/plugin/markdown/example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/plugin/markdown/example/</guid>
      <description>

&lt;h1 id=&#34;markdown-demo&#34;&gt;Markdown Demo&lt;/h1&gt;

&lt;h2 id=&#34;external-1-1&#34;&gt;External 1.1&lt;/h2&gt;

&lt;p&gt;Content 1.1&lt;/p&gt;

&lt;p&gt;Note: This will only appear in the speaker notes window.&lt;/p&gt;

&lt;h2 id=&#34;external-1-2&#34;&gt;External 1.2&lt;/h2&gt;

&lt;p&gt;Content 1.2&lt;/p&gt;

&lt;h2 id=&#34;external-2&#34;&gt;External 2&lt;/h2&gt;

&lt;p&gt;Content 2.1&lt;/p&gt;

&lt;h2 id=&#34;external-3-1&#34;&gt;External 3.1&lt;/h2&gt;

&lt;p&gt;Content 3.1&lt;/p&gt;

&lt;h2 id=&#34;external-3-2&#34;&gt;External 3.2&lt;/h2&gt;

&lt;p&gt;Content 3.2&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/test/examples/barebones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/test/examples/barebones/</guid>
      <description>&lt;!doctype html&gt;
&lt;html lang=&#34;en&#34;&gt;

	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Barebones&lt;/title&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;../../css/reveal.css&#34;&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div class=&#34;reveal&#34;&gt;

			&lt;div class=&#34;slides&#34;&gt;

				&lt;section&gt;
					&lt;h2&gt;Barebones Presentation&lt;/h2&gt;
					&lt;p&gt;This example contains the bare minimum includes and markup required to run a reveal.js presentation.&lt;/p&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;No Theme&lt;/h2&gt;
					&lt;p&gt;There&#39;s no theme included, so it will fall back on browser defaults.&lt;/p&gt;
				&lt;/section&gt;

			&lt;/div&gt;

		&lt;/div&gt;

		&lt;script src=&#34;../../js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;

			Reveal.initialize();

		&lt;/script&gt;

	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hexromas.github.io/manual/reveal.js/test/examples/embedded-media/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hexromas.github.io/manual/reveal.js/test/examples/embedded-media/</guid>
      <description>&lt;!doctype html&gt;
&lt;html lang=&#34;en&#34;&gt;

	&lt;head&gt;
		&lt;meta charset=&#34;utf-8&#34;&gt;

		&lt;title&gt;reveal.js - Embedded Media&lt;/title&gt;

		&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no&#34;&gt;

		&lt;link rel=&#34;stylesheet&#34; href=&#34;../../css/reveal.css&#34;&gt;
		&lt;link rel=&#34;stylesheet&#34; href=&#34;../../css/theme/default.css&#34; id=&#34;theme&#34;&gt;
	&lt;/head&gt;

	&lt;body&gt;

		&lt;div class=&#34;reveal&#34;&gt;

			&lt;div class=&#34;slides&#34;&gt;

				&lt;section&gt;
					&lt;h2&gt;Embedded Media Test&lt;/h2&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;iframe data-autoplay width=&#34;420&#34; height=&#34;345&#34; src=&#34;http://www.youtube.com/embed/l3RQZ4mcr1c&#34;&gt;&lt;/iframe&gt;
				&lt;/section&gt;

				&lt;section&gt;
					&lt;h2&gt;Empty Slide&lt;/h2&gt;
				&lt;/section&gt;

			&lt;/div&gt;

		&lt;/div&gt;

		&lt;script src=&#34;../../lib/js/head.min.js&#34;&gt;&lt;/script&gt;
		&lt;script src=&#34;../../js/reveal.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;

			Reveal.initialize({
				transition: &#39;linear&#39;
			});

		&lt;/script&gt;

	&lt;/body&gt;
&lt;/html&gt;
</description>
    </item>
    
  </channel>
</rss>